{"version":3,"sources":["webpack://rdf2h/webpack/universalModuleDefinition","webpack://rdf2h/webpack/bootstrap","webpack://rdf2h/external \"$rdf\"","webpack://rdf2h/./node_modules/rdfgraphnode-rdfext/lib/GraphNode.js","webpack://rdf2h/./node_modules/mustache/mustache.js","webpack://rdf2h/external \"fetch\"","webpack://rdf2h/./src/vocab.js","webpack://rdf2h/./src/rdf2h.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","_extRdflib","_nodeFetch","newObj","desc","getOwnPropertyDescriptor","set","_interopRequireWildcard","_defineProperties","target","props","length","descriptor","configurable","writable","_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","toString","e","isNativeReflectConstruct","a","push","apply","instance","Function","_setPrototypeOf","arguments","setPrototypeOf","__proto__","Headers","GraphNode","Impl","Array","slice","_class","nodes","graph","sources","Constructor","TypeError","_classCallCheck","this","_graph","isArray","protoProps","staticProps","_this","termType","indexOf","split","Promise","resolve","uri","rdfFetch","then","response","node","f","_this2","results","map","all","_this3","fetch","_this4","predicate","each","statementsMatching","undefined","statement","subject","Error","_default","mustache","objectToString","isFunction","escapeRegExp","string","replace","hasProperty","propName","regExpTest","RegExp","test","nonSpaceRe","isWhitespace","re","testRegExp","entityMap","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","Scanner","tail","pos","Context","view","parentContext","cache","parent","Writer","eos","scan","match","index","substring","scanUntil","search","lookup","primitive","intermediateValue","names","context","lookupHit","clearCache","parse","template","tags","cacheKey","join","tokens","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","start","type","chr","token","openSection","scanner","valueLength","charAt","nestedTokens","collector","numTokens","nestTokens","lastToken","squashedTokens","squashTokens","parseTemplate","render","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","self","j","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","version","defaultWriter","to_html","send","result","String","nodeName","rdf","suffix","$rdf","sym","rdfs","rdf2h","origLokup","RDF2h","rendererGraphs","tbox","reverse","env","Renderee","resolvePath","path","pathSections","readingURI","lastCharLess","section","nextSection","splitPathSection","resolveSubPath","subNode","endsWith","resolveCurie","startsWith","out","resultNodes","language","equals","literal","datatype","graphNode","prefixPart","splits","iriPart","prefix","iri","prefixMap","subContext","nodePath","resolvedNodes","console","warn","getRenderer","renderee","types","_rdf","sort","b","localeCompare","concat","renderer","reverseGraphs","reduce","typeGN","_rdf2h","find","getMatchingRenderer","_render","rendererRenderer","js","output","returnValue","err","message","stackLines","stack","lineWithSelf","findIndex","splice","curie"],"mappings":"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","file":"rdf2h.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"$rdf\"), require(\"fetch\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"$rdf\", \"fetch\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rdf2h\"] = factory(require(\"$rdf\"), require(\"fetch\"));\n\telse\n\t\troot[\"rdf2h\"] = factory(root[\"$rdf\"], root[\"fetch\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extRdflib = _interopRequireDefault(require(\"ext-rdflib\"));\n\nvar _nodeFetch = _interopRequireWildcard(require(\"node-fetch\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * Node Status:\n * \n * Locally undetermined: There are multiple local nodes satisfying the criteria specified for this object \n * Blank: The object represents a blank node in a graph that is locally available\n * Unresolved: This node is identified by a URI that has not yet been derefernced\n * \n * @type type\n */\nvar Headers = function (h) {\n  return h ? h : window.Headers;\n}(_nodeFetch[\"default\"].Headers);\n\nfunction GraphNode() {\n  return _construct(GraphNode.Impl, Array.prototype.slice.call(arguments));\n}\n\nGraphNode.Impl =\n/*#__PURE__*/\nfunction () {\n  function _class(nodes, graph, sources) {\n    _classCallCheck(this, _class);\n\n    this._graph = graph;\n\n    if (Array.isArray(nodes)) {\n      this.nodes = nodes;\n      /*if (this.nodes.length === 0) {\n          throw \"Can't represent empty set of nodes\";\n      }*/\n    } else {\n      this.nodes = [nodes];\n    }\n\n    this.sources = sources;\n  }\n\n  _createClass(_class, [{\n    key: \"fetch\",\n    value: function fetch() {\n      var _this = this;\n\n      if (this.termType !== \"NamedNode\" || this.sources && this.sources.indexOf(this.value.split(\"#\")[0]) > -1) {\n        return Promise.resolve(this);\n      } else {\n        //TODO extend existing graph?\n        var uri = this.value.split(\"#\")[0];\n        return GraphNode.rdfFetch(uri).then(function (response) {\n          return response.graph();\n        }).then(function (graph) {\n          return GraphNode(_this.node, graph, [uri]);\n        });\n      }\n    }\n    /*\n     * \n     * @param {type} f\n     * @returns {unresolved} a promise that is satisfied when all promises returned by f are resolved\n     */\n\n  }, {\n    key: \"each\",\n    value: function each(f) {\n      var _this2 = this;\n\n      var results = this.nodes.map(function (node) {\n        return f(GraphNode([node], _this2.graph, _this2.sources));\n      });\n      return Promise.all(results);\n    }\n  }, {\n    key: \"fetchEach\",\n    value: function fetchEach(f) {\n      var _this3 = this;\n\n      var results = this.nodes.map(function (node) {\n        return GraphNode([node], _this3.graph, _this3.sources).fetch().then(f);\n      });\n      return Promise.all(results);\n    }\n    /**\n     * Returns a GraphNode for each node represented by this GraphNode\n     */\n\n  }, {\n    key: \"split\",\n    value: function split() {\n      var _this4 = this;\n\n      return this.nodes.map(function (node) {\n        return GraphNode([node], _this4.graph, _this4.sources);\n      });\n    }\n  }, {\n    key: \"out\",\n    value: function out(predicate) {\n      var nodes = this.graph.each(this.node, predicate);\n      /*if (nodes.length === 0) {\n          throw \"No property \"+predicate+\" on \"+this.node;\n      }*/\n\n      return GraphNode(nodes, this.graph, this.sources);\n    }\n  }, {\n    key: \"in\",\n    value: function _in(predicate) {\n      var statements = this.graph.statementsMatching(undefined, predicate, this.node);\n      /*if (statements.length === 0) {\n          throw \"No property \"+predicate+\" pointing to \"+this.node;\n      }*/\n\n      return GraphNode(statements.map(function (statement) {\n        return statement.subject;\n      }), this.graph, this.sources);\n    }\n  }, {\n    key: \"graph\",\n    get: function get() {\n      if (!this._graph) {\n        throw Error(\"Operation not possible as no Graph is available, try fetching first\");\n      }\n\n      return this._graph;\n    }\n  }, {\n    key: \"node\",\n    get: function get() {\n      if (this.nodes.length !== 1) {\n        throw Error(\"Operation not possible as this GraphNode is underdetermined\");\n      }\n\n      return this.nodes[0];\n    }\n  }, {\n    key: \"termType\",\n    get: function get() {\n      return this.node.termType;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      ;\n      return this.node.value;\n    }\n  }]);\n\n  return _class;\n}();\n/**\n * \n * Fetches an RDF graph. If the server return 401 the login process will be \n * started upon which the fetch will be retried.\n *\n * @param uri {string} The URI to be fetched\n * @param options passed to $rdf.Fetcher\n * @param login {boolean} The login function to be called, optional\n *\n * @return {Promise<Response>} Response has a `graph`property with the rertived graph\n */\n\n\nGraphNode.rdfFetch = _extRdflib[\"default\"].rdfFetch;\nvar _default = GraphNode;\nexports[\"default\"] = _default;\n//# sourceMappingURL=GraphNode.js.map","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var tokens = cache[cacheKey];\n\n    if (tokens == null)\n      tokens = cache[cacheKey] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '3.1.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import $rdf from \"ext-rdflib\";\n\nexport function schema(suffix) {\n    return $rdf.sym(\"http://schema.org/\" + suffix);\n}\n\nexport function rdf(suffix) {\n    return $rdf.sym(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" + suffix);\n}\nexport function rdfs(suffix) {\n    return $rdf.sym(\"http://www.w3.org/2000/01/rdf-schema#\" + suffix);\n}\nexport function foaf(suffix) {\n    return $rdf.sym(\"http://xmlns.com/foaf/0.1/\" + suffix);\n}\nexport function rdf2h(suffix) {\n    return $rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\" + suffix);\n}\n\nexport default { schema, rdf, rdfs, foaf, rdf2h };","import rdf, { sym, literal } from \"ext-rdflib\";\nimport GraphNode from \"rdfgraphnode-rdfext\";\nimport { Context, render as _render } from \"mustache\";\nimport { rdf2h as _rdf2h, rdf as _rdf, rdfs } from \"./vocab.js\";\nvar NodeSet = new Array();\n\n\nfunction RDF2h(rendererGraphs, tbox) {\n    function r2h(suffix) {\n        return sym(\"http://rdf2h.github.io/2015/rdf2h#\"+suffix);\n    }\n    if (!Array.isArray(rendererGraphs)) {\n        rendererGraphs = [rendererGraphs];\n    }\n    if (tbox) {\n        this.tbox = tbox;\n    } else {\n        this.tbox = rendererGraphs[0];\n    }\n    this.rendererGraphs = rendererGraphs.reverse();\n    this.env = {}; //this is to allow shared vars among renderers\n}\n\n\n(function () {\n    var r2h = _rdf2h;\n    var origLokup = Context.prototype.lookup;\n    Context.prototype.lookup = function (name) {\n        if (this.view instanceof RDF2h.Renderee) {\n            var rdf2h = this.view.rdf2h;\n            var graphNode = this.view.graphNode;\n            var graph = graphNode.graph;\n            var context = this.view.context;\n            function resolvePath(path) {\n                function resolveSubPath(node, pathSections) {\n                    function resolveSection(section) {\n                        if (section === \".\") {\n                            return node;\n                        } else {\n                            if (section.endsWith(\"<-\")) {\n                                return node.in(RDF2h.resolveCurie(section.substring(0, section.length - 2)));\n                            } else {\n                                if (section.startsWith(\"^\")) {\n                                    return node.in(RDF2h.resolveCurie(section.substring(1)));\n                                } else {\n                                    return node.out(RDF2h.resolveCurie(section));\n                                }\n                            }\n                        }\n                    }\n                    let subNode = resolveSection(pathSections[0]);\n                    if (pathSections.length === 1) {\n                        var resultNodes = subNode.nodes;\n                        if (resultNodes.length === 0) {\n                            //handling pseudo properties of literals\n                            if (node.nodes[0].language) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(rdf.sym(\"http://purl.org/dc/terms/language\"))) {\n                                    return [rdf.literal(node.nodes[0].language)];\n                                }\n                            }\n                            if (node.nodes[0].datatype) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(RDF2h.resolveCurie(\"rdf:type\"))) {\n                                    return [node.nodes[0].datatype];\n                                }\n                            }\n                        }\n                        return resultNodes;\n                    }\n                    return resolveSubPath(subNode,pathSections.slice(1))    \n                }\n                function splitPathSection(string) {\n                    let result = [];\n                    let readingURI = false;\n                    let lastCharLess = false;\n                    let section = \"\";\n                    function nextSection() {\n                        if (section.length > 0) {\n                            result.push(section);\n                            section = \"\";    \n                        }\n                    }\n                    for (var pos = 0; pos < string.length; pos++) {    \n                        let c = string[pos];\n                        if (lastCharLess) {\n                            if (c !== \"-\") {\n                                nextSection();\n                                readingURI = true;\n                            }\n                            section += \"<\";\n                            lastCharLess = false;\n                        }\n                        if (c === \"<\") {\n                            lastCharLess = true;\n                            continue;\n                        }\n                        if (readingURI && (c == \">\")) {\n                            section += c;\n                            nextSection();\n                            readingURI = false;\n                            continue;\n                        }\n                        if (!readingURI && (c == \"/\")) {\n                            nextSection();\n                            continue;\n                        }\n                        section += c;\n                    }\n                    nextSection();\n                    return result;\n                }\n                var pathSections = splitPathSection(path);// .split(\"/\").filter(function(e) { return e.length > 0})\n                return resolveSubPath(graphNode, pathSections);\n            }\n            if (name.startsWith(\"@prefix \")) {\n                var splits = name.split(\" \");\n                var prefixPart = splits[1];\n                var iriPart = splits[2];\n                var prefix = prefixPart.substring(0, prefixPart.length -1);\n                var iri = iriPart.substring(1, iriPart.length -1);\n                RDF2h.prefixMap[prefix] = iri;\n                return \"\";\n            }\n            if (name.startsWith(\":render \")) {\n                var splits = name.split(\" \");\n                var nodePath = splits[1];\n                var subContext = splits[2];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                var resolvedNodes = resolvePath(nodePath);\n                if (resolvedNodes.length > 1) {\n                    console.warn(\"Argument of render evaluates to more than one node!\")\n                }\n                if (resolvedNodes.length > 0) {\n                    return rdf2h.render(graph, resolvedNodes[0], subContext)\n                } else {\n                    return \"\";\n                }\n            }\n            if (name.startsWith(\":continue\")) {\n                var splits = name.split(\" \");\n                var subContext = splits[1];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                if (graphNode.nodes.length > 1) {\n                    console.warn(\":continue invoked in context with more than one node, this shouldn't be possible!\")\n                }\n                return rdf2h.render(graph, graphNode.nodes[0], subContext);\n\n            }\n            if (name.startsWith(\"+\")) {\n                name = name.substring(1);\n                return (resolvePath(name).length > 0);\n            }\n            var nodes = resolvePath(name);\n            if (nodes.length === 1) {\n                return new RDF2h.Renderee(rdf2h, GraphNode(nodes[0], graph), context);\n            } else {\n                return nodes.map(function (node) {\n                    return new RDF2h.Renderee(rdf2h, GraphNode(node, graph), context);\n                });\n            }\n            /*var node = this.view;\n             if (name === \".\") {\n             return node;\n             } else {\n             return \"not supported: \"+name;\n             }*/\n        } else {\n            return origLokup.call(this, name);\n        }\n    };\n})();\n\nRDF2h.Renderee = function (rdf2h, graphNode, context) {\n    if (!graphNode.nodes) {\n        throw new Error(\"second argument must be a GraphNode\");\n    }\n    if (graphNode.nodes.length !== 1) {\n        throw new Error(\"Renderee must be a single node\");\n    }\n    this.rdf2h = rdf2h;\n    this.graphNode = graphNode;\n    this.context = context;\n};\n\nRDF2h.Renderee.prototype.toString = function () {\n    if (this.graphNode.value) {\n        return this.graphNode.value;\n    }\n    return this.graphNode.toString();\n}\n\nRDF2h.prototype.getRenderer = function (renderee) {\n    var r2h = _rdf2h;\n    let tbox = this.tbox;\n    function matchesContext(cfRenderer) {\n        var contexts = cfRenderer.out(r2h(\"context\")).nodes;\n        if (contexts.length === 0) {\n            console.debug(\"renderer \"+cfRenderer+\" specifies no context, thus accepting it for \"+renderee.context);\n            return true;\n        }\n        return contexts.some(function(context) {\n            if (renderee.context.equals(context)) {\n                console.debug(\"renderer \"+cfRenderer+\" matches the context \"+renderee.context);\n                return true;\n            }\n        });\n    }\n    function resolveRendererNode(rendererURI) {\n        if (!window) {\n            return \"Could not get renderer: \" + rendererURI + \", no window object.\"\n        }\n        var pageURIPrefix = window.location + \"#\";\n        if (!rendererURI.startsWith(pageURIPrefix)) {\n            return \"Could not get renderer: \" + rendererURI + \", the prefix must be \" + pageURIPrefix + \".\"\n        }\n        var id = rendererURI.substring(pageURIPrefix.length);\n        return document.getElementById(id).textContent;\n    }\n    function rendererRenderer(renderer) {\n        return function (renderee) {\n            return _render(renderer, renderee);\n        };\n    }\n    function getTypes(graphNode) {\n        //the array might contain rdfs:Resource twice (at the end)\n        if (graphNode.node.termType === \"Literal\") {\n            return [graphNode.node.datatype];\n        } else {\n            return graphNode.out(_rdf(\"type\")).nodes.sort(\n                (a,b) => {\n                    if (a.equals(b)) {\n                        return 0;\n                    }\n                    if (a.equals(rdfs(\"Resource\"))) {\n                        return 1;\n                    }\n                    if (b.equals(rdfs(\"Resource\"))) {\n                        return -1;\n                    }\n                    if (tbox.match(a, rdfs(\"subClassOf\"),b).length === 0) {\n                        if (tbox.match(b, rdfs(\"subClassOf\"),a).length === 0) {\n                            return a.value.localeCompare(b.value);\n                        } else {\n                            return 1;\n                        }\n                    } else {\n                        return -1;\n                    }\n                }\n            ).concat([rdfs(\"Resource\")]);\n        }        \n    }\n    let self = this;\n    function getMatchingRenderer(types, context) {\n        function getMatching(renderers) {\n            return renderers.find(renderer => context.equals(renderer.out(_rdf2h(\"context\")).node));\n        }\n        let reverseGraphs = self.rendererGraphs;\n        return types.reduce((renderer, type) => {\n            return renderer ? renderer : reverseGraphs.reduce((renderer, graph) => {\n                let typeGN =  GraphNode(type, graph);\n                return renderer ? renderer : getMatching(typeGN.in(_rdf2h(\"type\")).split());\n            }, null);\n        }, null);\n    }\n    let types = getTypes(renderee.graphNode);\n    let renderer = getMatchingRenderer(types, renderee.context);\n    if (!renderer) {\n        throw Error(\"No renderer found with context: <\"+renderee.context.value+\"> for any of the types \"+types.map(t => \"<\"+t.value+\">\").join()\n                    +\". The resource <\"+renderee.graphNode.value+\"> could thus not be rendered.\");\n    }\n    let mustache = renderer.out(_rdf2h(\"mustache\"));\n    if (mustache.nodes.length > 0) {\n        return rendererRenderer(mustache.value);\n    }\n    let js = renderer.out(_rdf2h(\"javaScript\"))\n    return function (renderee) {\n        try {\n            let render =  (n, context) => {\n                return renderee.rdf2h.render(n.graph, n.node, context ? context : renderee.context);\n            };\n            let output = \"\";\n            let print = (s) => {\n                output += s;\n            };\n            //Also printing return value for now\n            let returnValue = (new Function(\"n\", \"context\", \"$rdf\", \"render\", \"print\", \"GraphNode\", \"env\", js.value)\n                    )(renderee.graphNode, renderee.context, rdf, render, print, GraphNode, renderee.rdf2h.env);\n            if (returnValue) {\n                return output + returnValue;\n            } else {\n                return output;\n            }\n        } catch(err) {\n            err.message = err.message + \" in \" + js.value;\n            let stackLines = err.stack.split(\"\\n\");\n            let lineWithSelf = stackLines.findIndex(l => l.indexOf(\"RDF2h.render\") > 0);\n            err.stack = stackLines.splice(0, lineWithSelf - 1).join(\"\\n\");\n            throw err;\n        }\n    };\n\n\n}\n\nRDF2h.prototype.render = function (graph, node, context) {\n    if (!node.termType) {\n        node = sym(node);\n    }\n    if (!context) {\n        context = _rdf2h(\"Default\");\n    }\n    //wrap all in one object that gets special care by lookup\n    var renderee = new RDF2h.Renderee(this, GraphNode(node, graph), context);\n    var renderer = this.getRenderer(renderee);\n    return renderer(renderee);\n}\n\nRDF2h.prefixMap = {};\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"rdfs\"] = \"http://www.w3.org/2000/01/rdf-schema#\";\nRDF2h.prefixMap[\"r2h\"] = \"http://rdf2h.github.io/2015/rdf2h#\";\nRDF2h.prefixMap[\"schema\"] = \"http://schema.org/\";\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"dct\"] = \"http://purl.org/dc/terms/\";\n\n\nRDF2h.resolveCurie = function (curie) {\n    if (curie.startsWith(\"<\") && curie.endsWith(\">\")) {\n        //URI, not a curie\n        return sym(curie.substring(1, curie.length - 1));\n    }\n    var splits = curie.split(\":\");\n    var prefix = splits[0];\n    var suffix = splits[1];\n    if (RDF2h.prefixMap[prefix]) {\n        return sym(RDF2h.prefixMap[prefix] + suffix);\n    } else {\n        return sym(curie);\n    }\n\n};\n\nexport default RDF2h;"],"sourceRoot":""}