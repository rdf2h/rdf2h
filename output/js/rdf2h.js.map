{"version":3,"sources":["webpack:///js/rdf2h.js","webpack:///webpack/bootstrap 8015c11779bc69b15b85","webpack:///external \"$rdf\"","webpack:///./src/rdf2h.js","webpack:///./node_modules/rdfgraphnode/distribution/main.js","webpack:///./node_modules/mustache/mustache.js","webpack:///./src/logger.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","$rdf","RDF2h","matcherGraph","r2h","suffix","rdf","sym","console","info","logger","Logger","INFO","this","unorderedMatchers","Array","rdfTypeProperty","matcherType","statementsMatching","forEach","t","push","subject","beforeProperty","beforeStatements","sortedMatchers","self","length","some","current","filter","equals","error","toString","debug","map","GraphNode","Mustache","NodeSet","ns","origLokup","Context","lookup","view","Renderee","resolvePath","path","resolveSubPath","node","pathSections","subNode","section","endsWith","in","resolveCurie","substring","startsWith","out","resultNodes","nodes","language","literal","datatype","slice","split","e","graphNode","rdf2h","graph","context","currentMatcherIndex","splits","prefixPart","iriPart","prefix","iri","prefixMap","nodePath","subContext","resolvedNodes","warn","render","value","getRenderer","renderee","matchPattern","cfTriplePattern","isThis","termType","matchesContext","cfTemplate","contexts","trace","matches","cfMatcher","triplePatterns","resolveTemplateNode","templateURI","window","pageURIPrefix","location","id","document","getElementById","textContent","templateRenderer","template","startMatcherIndex","matcher","templateNodes","j","templateNode","jsNode","eval","mustacheNode","curie","_classCallCheck","instance","Constructor","TypeError","Function","bind","apply","Impl","concat","arguments","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_class","sources","_graph","isArray","_this","indexOf","Promise","resolve","uri","rdfFetch","then","response","f","_this2","results","all","_this3","fetch","predicate","each","undefined","statement","Error","options","login","ggg","reject","Fetcher","redirect","status","log","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","global","factory","nodeName","mustache","isFunction","typeStr","escapeRegExp","string","replace","hasProperty","propName","testRegExp","re","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","String","entityMap","parseTemplate","tags","compileTags","tagsToCompile","spaceRe","openingTagRe","RegExp","closingTagRe","closingCurlyRe","sections","tokens","spaces","hasTag","nonSpace","start","type","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","charAt","pop","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","nestedTokens","collector","tail","parentContext","cache",".","parent","Writer","objectToString","test","&","<",">","\"","'","/","`","=","match","index","search","names","lookupHit","clearCache","parse","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","escape","version","defaultWriter","to_html","send","result","level","TRACE","DEBUG","WARN","ERROR","setLevel","message","args"],"mappings":"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","file":"js/rdf2h.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = $rdf;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/* global rdf, Mustache */\n\nvar rdf = __webpack_require__(0);\nvar GraphNode = __webpack_require__(2);\nvar Mustache = __webpack_require__(3);\nvar Logger = __webpack_require__(4);\nvar NodeSet = new Array();\n\nfunction RDF2h(matcherGraph) {\n    function r2h(suffix) {\n        return rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\" + suffix);\n    }\n    console.info(\"RDF2h created\");\n    if (RDF2h.logger === Logger.INFO) {\n        RDF2h.logger.info(\"To see more debug output invoke RDF2h.logger.setLevel(Logger.DEBUG) or even RDF2h.logger.setLevel(Logger.TRACE)\");\n    }\n    this.matcherGraph = matcherGraph;\n    var unorderedMatchers = new Array(); //new NodeSet();\n    var rdfTypeProperty = rdf.sym(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\");\n    var matcherType = r2h(\"Matcher\");\n    var matcherStatements = matcherGraph.statementsMatching(null, rdfTypeProperty, matcherType);\n    matcherStatements.forEach(function (t) {\n        unorderedMatchers.push(t.subject);\n    });\n    /*Sorting:\n     * \n     * Choose any matcher that is not the object of any before statement . \n     * Remove all before statements with that matcher as subject. \n     * Repeat till there are no more matchers that are not the object of a \n     * before statement. \n     * If there are matchers left the before statements are circular.\n     */\n    var beforeProperty = r2h(\"before\");\n    var beforeStatements = matcherGraph.statementsMatching(null, beforeProperty);\n    beforeStatements.forEach(function (t) {\n        unorderedMatchers.push(t.subject);\n        unorderedMatchers.push(t.object);\n    });\n    this.sortedMatchers = [];\n    var self = this;\n    while (unorderedMatchers.length > 0) {\n        if (!unorderedMatchers.some(function (current) {\n            //TODO if (beforeStatements.match(null, beforeProperty, current).length === 0) {\n            if (true) {\n                self.sortedMatchers.push(current);\n                unorderedMatchers = unorderedMatchers.filter(function (n) {\n                    return !n.equals(current);\n                });\n                //FIXME beforeStatements.removeMatches(current, beforeProperty);\n                return true; //stop iteration over unorderedMatchers\n            } else {\n                return false;\n            }\n        })) {\n            RDF2h.logger.error(\"Circle Detected with:\\n\" + beforeStatements.toString());\n            break;\n        }\n    }\n    RDF2h.logger.debug(\"Constructed RDF2h with the following matchers: \", this.sortedMatchers.map(function (m) {\n        return m.toString();\n    }));\n}\n\nRDF2h.logger = new Logger();\n\nRDF2h.ns = function (suffix) {\n    return rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\" + suffix);\n};\n\n(function () {\n    var r2h = RDF2h.ns;\n    var origLokup = Mustache.Context.prototype.lookup;\n    Mustache.Context.prototype.lookup = function (name) {\n        if (this.view instanceof RDF2h.Renderee) {\n            var resolvePath = function resolvePath(path) {\n                function resolveSubPath(node, pathSections) {\n                    function resolveSection(section) {\n                        if (section === \".\") {\n                            return node;\n                        } else {\n                            if (section.endsWith(\"<-\")) {\n                                return node.in(RDF2h.resolveCurie(section.substring(0, section.length - 2)));\n                            } else {\n                                if (section.startsWith(\"^\")) {\n                                    return node.in(RDF2h.resolveCurie(section.substring(1)));\n                                } else {\n                                    return node.out(RDF2h.resolveCurie(section));\n                                }\n                            }\n                        }\n                    }\n                    var subNode = resolveSection(pathSections[0]);\n                    if (pathSections.length === 1) {\n                        var resultNodes = subNode.nodes;\n                        if (resultNodes.length === 0) {\n                            //handling pseudo properties of literals\n                            if (node.nodes[0].language) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(rdf.sym(\"http://purl.org/dc/terms/language\"))) {\n                                    return [rdf.literal(node.nodes[0].language)];\n                                }\n                            }\n                            if (node.nodes[0].datatype) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(RDF2h.resolveCurie(\"rdf:type\"))) {\n                                    return [node.nodes[0].datatype];\n                                }\n                            }\n                        }\n                        return resultNodes;\n                    }\n                    return resolveSubPath(subNode, pathSections.slice(1));\n                }\n                var pathSections = path.split(\"/\").filter(function (e) {\n                    return e.length > 0;\n                });\n                return resolveSubPath(graphNode, pathSections);\n            };\n\n            var rdf2h = this.view.rdf2h;\n            var graphNode = this.view.graphNode;\n            var graph = this.view.graph;\n            var context = this.view.context;\n            var currentMatcherIndex = this.view.currentMatcherIndex;\n\n            if (name.startsWith(\"@prefix \")) {\n                var splits = name.split(\" \");\n                var prefixPart = splits[1];\n                var iriPart = splits[2];\n                var prefix = prefixPart.substring(0, prefixPart.length - 1);\n                var iri = iriPart.substring(1, iriPart.length - 1);\n                RDF2h.prefixMap[prefix] = iri;\n                return \"\";\n            }\n            if (name.startsWith(\":render \")) {\n                var splits = name.split(\" \");\n                var nodePath = splits[1];\n                var subContext = splits[2];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                var resolvedNodes = resolvePath(nodePath);\n                if (resolvedNodes.length > 1) {\n                    RDF2h.logger.warn(\"Argument of render evaluates to more than one node!\");\n                }\n                if (resolvedNodes.length > 0) {\n                    return rdf2h.render(graph, resolvedNodes[0], subContext);\n                } else {\n                    return \"\";\n                }\n            }\n            if (name.startsWith(\":continue\")) {\n                var splits = name.split(\" \");\n                var subContext = splits[1];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                if (graphNode.nodes.length > 1) {\n                    RDF2h.logger.warn(\":continue invoked in context with more than one node, this shouldn't be possible!\");\n                }\n                return rdf2h.render(graph, graphNode.nodes[0], subContext, currentMatcherIndex + 1);\n            }\n            if (name.startsWith(\"+\")) {\n                name = name.substring(1);\n                return resolvePath(name).length > 0;\n            }\n            var nodes = resolvePath(name);\n            if (nodes.length === 1) {\n                return new RDF2h.Renderee(rdf2h, graph, nodes[0], context);\n            } else {\n                return nodes.map(function (node) {\n                    return new RDF2h.Renderee(rdf2h, graph, node, context);\n                });\n            }\n            /*var node = this.view;\n             if (name === \".\") {\n             return node;\n             } else {\n             return \"not supported: \"+name;\n             }*/\n        } else {\n            return origLokup.call(this, name);\n        }\n    };\n})();\n\nRDF2h.Renderee = function (rdf2h, graph, node, context) {\n    if (!node) {\n        throw \"no node specficied!\";\n    }\n    if (Object.prototype.toString.call(node) === '[object Array]') {\n        throw \"Renderee must be a single node\";\n    }\n    this.rdf2h = rdf2h;\n    this.graph = graph;\n    this.node = node;\n    this.context = context;\n    this.graphNode = GraphNode(node, graph);\n};\n\nRDF2h.Renderee.prototype.toString = function () {\n    if (this.node.value) {\n        return this.node.value;\n    }\n    return this.node.toString();\n};\n\nRDF2h.prototype.getRenderer = function (renderee) {\n    var r2h = RDF2h.ns;\n    function matchPattern(cfTriplePattern) {\n        function isThis(node) {\n            return node && node.equals(RDF2h.ns(\"this\"));\n            //return (node && (node.interfaceName === \"NamedNode\") &&\n            //        (node.toString() === \"http://rdf2h.github.io/2015/rdf2h#this\"));\n        }\n        var s = cfTriplePattern.out(r2h(\"subject\")).nodes[0];\n        var p = cfTriplePattern.out(r2h(\"predicate\")).nodes[0];\n        var o = cfTriplePattern.out(r2h(\"object\")).nodes[0];\n        if (isThis(s)) {\n            if (renderee.node.termType === \"Literal\") {\n                if (RDF2h.resolveCurie(\"rdf:type\").equals(p)) {\n                    return renderee.node.datatype.equals(o);\n                }\n            }\n            return renderee.graphNode.out(p).nodes.some(function (e) {\n                return !o || o.equals(e);\n            });\n        } else if (isThis(o)) {\n            return renderee.graphNode.in(p).nodes.some(function (e) {\n                return !s || s.equals(e);\n            });\n        } else {\n            console.error(\"Triple pattern must have r2h:this as subject or object\");\n        }\n    }\n    function matchesContext(cfTemplate) {\n        var contexts = cfTemplate.out(r2h(\"context\")).nodes;\n        if (contexts.length === 0) {\n            RDF2h.logger.trace(\"template \" + cfTemplate + \" specifies no context, thus accepting it for \" + renderee.context);\n            return true;\n        }\n        return contexts.some(function (context) {\n            if (renderee.context.equals(context)) {\n                RDF2h.logger.trace(\"template \" + cfTemplate + \" matches the context \" + renderee.context);\n                return true;\n            }\n        });\n    }\n    var self = this;\n    function matches(cfMatcher) {\n        var triplePatterns = cfMatcher.out(r2h(\"triplePattern\")).nodes;\n        for (var i = 0; i < triplePatterns.length; i++) {\n            var cfTp = GraphNode(triplePatterns[i], self.matcherGraph);\n            if (!matchPattern(cfTp)) {\n                RDF2h.logger.debug(\"Matcher \" + cfMatcher + \" doesn't has triple patterns matching \" + renderee.graphNode);\n                return false;\n            }\n        }\n        RDF2h.logger.debug(\"Matcher \" + cfMatcher + \" has triple patterns matching \" + renderee.graphNode);\n        return true;\n    }\n    function resolveTemplateNode(templateURI) {\n        if (!window) {\n            return \"Could not get template: \" + templateURI + \", no window object.\";\n        }\n        var pageURIPrefix = window.location + \"#\";\n        if (!templateURI.startsWith(pageURIPrefix)) {\n            return \"Could not get template: \" + templateURI + \", the prefix must be \" + pageURIPrefix + \".\";\n        }\n        var id = templateURI.substring(pageURIPrefix.length);\n        return document.getElementById(id).textContent;\n    }\n    function templateRenderer(template) {\n        return function (renderee) {\n            return Mustache.render(template, renderee);\n        };\n    }\n    for (var i = this.startMatcherIndex; i < this.sortedMatchers.length; i++) {\n        var matcher = this.sortedMatchers[i];\n        var cfMatcher = GraphNode(matcher, this.matcherGraph);\n        if (matches(cfMatcher)) {\n            renderee.currentMatcherIndex = i;\n            var templateNodes = cfMatcher.out(r2h(\"template\")).nodes;\n            for (var j = 0; j < templateNodes.length; j++) {\n                var templateNode = templateNodes[j];\n                var cfTemplate = GraphNode(templateNode, this.matcherGraph);\n                if (!matchesContext(cfTemplate)) {\n                    continue;\n                }\n                var jsNode = cfTemplate.out(r2h(\"javaScript\")).nodes[0];\n                if (jsNode) {\n                    return eval(\"var f = \" + jsNode.value + \"; f;\");\n                }\n                var mustacheNode = cfTemplate.out(r2h(\"mustache\")).node;\n                if (mustacheNode.termType === \"NamedNode\") {\n                    return templateRenderer(resolveTemplateNode(mustacheNode.value));\n                }\n                return templateRenderer(mustacheNode.value);\n            }\n            RDF2h.logger.debug(\"Matcher \" + cfMatcher + \" has not template with matching context\");\n        }\n    }\n    if (this.startMatcherIndex === 0) {\n        return templateRenderer('<div class=\"missingTemplate\">No template found for &lt;{{.}}&gt; in context &lt;' + renderee.context + '&gt;</div>');\n    } else {\n        return templateRenderer('<div class=\"noMoreTemplate\">No more template available for &lt;{{.}}&gt; in context &lt;' + renderee.context + '&gt;</div>');\n    }\n};\n\nRDF2h.prototype.render = function (graph, node, context, startMatcherIndex) {\n    if (!node.termType) {\n        node = rdf.sym(node);\n    }\n    if (!context) {\n        context = RDF2h.ns(\"Default\");\n    }\n    //wrap all in one object that gets special care by lookup\n    var renderee = new RDF2h.Renderee(this, graph, node, context);\n    if (!startMatcherIndex) {\n        this.startMatcherIndex = 0;\n    } else {\n        this.startMatcherIndex = startMatcherIndex;\n    }\n    var renderer = this.getRenderer(renderee);\n    return renderer(renderee);\n};\n\nRDF2h.prefixMap = {};\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"rdfs\"] = \"http://www.w3.org/2000/01/rdf-schema#\";\nRDF2h.prefixMap[\"r2h\"] = \"http://rdf2h.github.io/2015/rdf2h#\";\nRDF2h.prefixMap[\"schema\"] = \"http://schema.org/\";\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"dct\"] = \"http://purl.org/dc/terms/\";\n\nRDF2h.resolveCurie = function (curie) {\n    RDF2h.logger.debug(\"resolving \" + curie);\n    var splits = curie.split(\":\");\n    var prefix = splits[0];\n    var suffix = splits[1];\n    if (RDF2h.prefixMap[prefix]) {\n        return rdf.sym(RDF2h.prefixMap[prefix] + suffix);\n    } else {\n        return rdf.sym(curie);\n    }\n};\n\nif (typeof window !== 'undefined') {\n    window.RDF2h = RDF2h;\n}\n\nif (true) {\n    module.exports = RDF2h;\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/**\n * Node Status:\n * \n * Locally undetermined: There are multiple local nodes satisfying the criteria specified for this object \n * Blank: The object represents a blank node in a graph that is locally available\n * Unresolved: This node is identified by a URI that has not yet been derefernced\n * \n * @type type\n */\nif (typeof $rdf === 'undefined') {\n    var $rdf = __webpack_require__(0);\n}\n\nfunction GraphNode() {\n    return new (Function.prototype.bind.apply(GraphNode.Impl, [null].concat(Array.prototype.slice.call(arguments))))();\n}\n\nGraphNode.Impl = function () {\n    function _class(nodes, graph, sources) {\n        _classCallCheck(this, _class);\n\n        this._graph = graph;\n        if (Array.isArray(nodes)) {\n            this.nodes = nodes;\n            /*if (this.nodes.length === 0) {\n                throw \"Can't represent empty set of nodes\";\n            }*/\n        } else {\n            this.nodes = [nodes];\n        }\n        this.sources = sources;\n    }\n\n    _createClass(_class, [{\n        key: \"fetch\",\n        value: function fetch() {\n            var _this = this;\n\n            if (this.termType !== \"NamedNode\" || this.sources && this.sources.indexOf(this.value.split(\"#\")[0]) > -1) {\n                return Promise.resolve(this);\n            } else {\n                //TODO extend existing graph?\n                var uri = this.value.split(\"#\")[0];\n                return GraphNode.rdfFetch(uri).then(function (response) {\n                    return GraphNode(_this.node, response.graph, [uri]);\n                });\n            }\n        }\n\n        /*\n         * \n         * @param {type} f\n         * @returns {unresolved} a promise thta is satisfied whne all promises returned by f are resolved\n         */\n\n    }, {\n        key: \"each\",\n        value: function each(f) {\n            var _this2 = this;\n\n            var results = this.nodes.map(function (node) {\n                return f(GraphNode([node], _this2.graph, _this2.sources));\n            });\n            return Promise.all(results);\n        }\n    }, {\n        key: \"fetchEach\",\n        value: function fetchEach(f) {\n            var _this3 = this;\n\n            var results = this.nodes.map(function (node) {\n                return GraphNode([node], _this3.graph, _this3.sources).fetch().then(f);\n            });\n            return Promise.all(results);\n        }\n    }, {\n        key: \"out\",\n        value: function out(predicate) {\n            var nodes = this.graph.each(this.node, predicate);\n            /*if (nodes.length === 0) {\n                throw \"No property \"+predicate+\" on \"+this.node;\n            }*/\n            return GraphNode(nodes, this.graph, this.sources);\n        }\n    }, {\n        key: \"in\",\n        value: function _in(predicate) {\n            var statements = this.graph.statementsMatching(undefined, predicate, this.node);\n            /*if (statements.length === 0) {\n                throw \"No property \"+predicate+\" pointing to \"+this.node;\n            }*/\n            return GraphNode(statements.map(function (statement) {\n                return statement.subject;\n            }), this.graph, this.sources);\n        }\n    }, {\n        key: \"graph\",\n        get: function get() {\n            if (!this._graph) {\n                throw Error(\"Operation not possible as no Graph is available, try fetching first\");\n            }\n            return this._graph;\n        }\n    }, {\n        key: \"node\",\n        get: function get() {\n            if (this.nodes.length !== 1) {\n                throw Error(\"Operation not possible as this GraphNode is underdetermined\");\n            }\n            return this.nodes[0];\n        }\n    }, {\n        key: \"termType\",\n        get: function get() {\n            return this.node.termType;\n        }\n    }, {\n        key: \"value\",\n        get: function get() {\n            ;\n            return this.node.value;\n        }\n    }]);\n\n    return _class;\n}();\n\n/**\n * \n * Fetches an RDF graph. If the server return 401 the login process will be \n * started upon which the fetch will be retried.\n *\n * @param uri {string} The URI to be fetched\n * @param options passed to $rdf.Fetcher\n * @param login {boolean} The login function to be called, optional\n *\n * @return {Promise<Response>} Response has a `graph`property with the rertived graph\n */\nGraphNode.rdfFetch = function (uri, options, login) {\n    var ggg = this;\n    return new Promise(function (resolve, reject) {\n        var graph = $rdf.graph();\n        var fetcher = new $rdf.Fetcher(graph, options);\n        fetcher.fetch(uri, {\n            \"redirect\": \"follow\"\n        }).then(function (response) {\n            if (response.status < 300) {\n                response.graph = graph;\n                resolve(response);\n            } else {\n                if (login && response.status === 401) {\n                    console.log(\"Got 401 response, attempting to login\");\n                    return login().then(function () {\n                        return ggg.rdfFetch(uri);\n                    });\n                } else {\n                    reject(response);\n                }\n            }\n        });\n    });\n};\n\nif (true) {\n    module.exports = GraphNode;\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache(global, factory) {\n  if (( false ? 'undefined' : _typeof(exports)) === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n})(undefined, function mustacheFactory(mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill(object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr(obj) {\n    return isArray(obj) ? 'array' : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty(obj, propName) {\n    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && propName in obj;\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap(s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    if (!template) return [];\n\n    var sections = []; // Stack to hold section tokens\n    var tokens = []; // Buffer to hold the tokens\n    var spaces = []; // Indices of whitespace tokens on the current line\n    var hasTag = false; // Is there a {{tag}} on the current line?\n    var nonSpace = false; // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags(tagsToCompile) {\n      if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe)) break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [type, value, start, scanner.pos];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection) throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos() {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan(re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0) return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil(re) {\n    var index = this.tail.search(re),\n        match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push(view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup(name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this,\n          names,\n          index,\n          lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1) lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value)) value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache() {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse(template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null) tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render(template, view, partials) {\n    var tokens = this.parse(template);\n    var context = view instanceof Context ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);else if (symbol === '&') value = this.unescapedValue(token, context);else if (symbol === 'name') value = this.escapedValue(token, context);else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined) buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null) buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue(token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = ['{{', '}}'];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache() {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse(template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render(template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html(template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/* global module */\n\nfunction Logger() {\n    //get from localStorage\n    this.level = Logger.INFO;\n}\n\nLogger.TRACE = 1;\nLogger.DEBUG = 2;\nLogger.INFO = 3;\nLogger.WARN = 4;\nLogger.ERROR = 5;\n\nLogger.prototype.setLevel = function (level) {\n    this.level = level;\n};\n\nLogger.prototype.trace = function (message) {\n    if (this.level <= Logger.TRACE) {\n        var args = arguments;\n        args[0] = \"[TRACE] \" + message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.debug = function (message) {\n    if (this.level <= Logger.DEBUG) {\n        var args = arguments;\n        args[0] = \"[DEBUG] \" + message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.info = function (message) {\n    if (this.level <= Logger.INFO) {\n        var args = arguments;\n        args[0] = \"[INFO] \" + message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.warn = function (message) {\n    if (this.level <= Logger.WARN) {\n        var args = arguments;\n        args[0] = \"[WARN] \" + message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.error = function (message) {\n    if (this.level <= Logger.ERROR) {\n        var args = arguments;\n        args[0] = \"[ERROR] \" + message;\n        console.log.apply(console, args);\n    }\n};\n\nif (true) {\n    module.exports = Logger;\n}\nif (typeof window !== 'undefined') {\n    window.Logger = Logger;\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/rdf2h.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8015c11779bc69b15b85","module.exports = $rdf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"$rdf\"\n// module id = 0\n// module chunks = 0","/* global rdf, Mustache */\n\n\nvar rdf = require(\"rdflib\");\nvar GraphNode = require(\"rdfgraphnode\");\nvar Mustache = require(\"mustache\");\nvar Logger = require(\"./logger.js\");\nvar NodeSet = new Array();\n\n\nfunction RDF2h(matcherGraph) {\n    function r2h(suffix) {\n        return rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\"+suffix);\n    }\n    console.info(\"RDF2h created\");\n    if (RDF2h.logger === Logger.INFO) {\n        RDF2h.logger.info(\"To see more debug output invoke RDF2h.logger.setLevel(Logger.DEBUG) or even RDF2h.logger.setLevel(Logger.TRACE)\");\n    }\n    this.matcherGraph = matcherGraph;\n    var unorderedMatchers = new Array(); //new NodeSet();\n    var rdfTypeProperty = rdf.sym(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\");\n    var matcherType = r2h(\"Matcher\");\n    var matcherStatements = matcherGraph.statementsMatching(null, rdfTypeProperty, matcherType);\n    matcherStatements.forEach(function(t) {\n        unorderedMatchers.push(t.subject);\n    });\n    /*Sorting:\n     * \n     * Choose any matcher that is not the object of any before statement . \n     * Remove all before statements with that matcher as subject. \n     * Repeat till there are no more matchers that are not the object of a \n     * before statement. \n     * If there are matchers left the before statements are circular.\n     */   \n    var beforeProperty = r2h(\"before\");\n    var beforeStatements = matcherGraph.statementsMatching(null,beforeProperty);\n    beforeStatements.forEach(function(t) {\n        unorderedMatchers.push(t.subject);\n        unorderedMatchers.push(t.object);\n    });\n    this.sortedMatchers = [];\n    var self = this;\n    while (unorderedMatchers.length > 0) {\n        if (!unorderedMatchers.some(function(current) {\n            //TODO if (beforeStatements.match(null, beforeProperty, current).length === 0) {\n            if (true) {\n                self.sortedMatchers.push(current);\n                unorderedMatchers = unorderedMatchers.filter(n => !n.equals(current));\n                //FIXME beforeStatements.removeMatches(current, beforeProperty);\n                return true; //stop iteration over unorderedMatchers\n            } else {\n                return false;\n            }\n        })) {\n            RDF2h.logger.error(\"Circle Detected with:\\n\"+beforeStatements.toString());\n            break;\n        }\n    }\n    RDF2h.logger.debug(\"Constructed RDF2h with the following matchers: \", this.sortedMatchers.map(function(m) {return m.toString();}));\n}\n\nRDF2h.logger = new Logger();\n\nRDF2h.ns = function(suffix) {\n    return rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\"+suffix);\n};\n\n(function () {\n    var r2h = RDF2h.ns;\n    var origLokup = Mustache.Context.prototype.lookup;\n    Mustache.Context.prototype.lookup = function (name) {\n        if (this.view instanceof RDF2h.Renderee) {\n            var rdf2h = this.view.rdf2h;\n            var graphNode = this.view.graphNode;\n            var graph = this.view.graph;\n            var context = this.view.context;\n            var currentMatcherIndex = this.view.currentMatcherIndex;\n            function resolvePath(path) {\n                function resolveSubPath(node, pathSections) {\n                    function resolveSection(section) {\n                        if (section === \".\") {\n                            return node;\n                        } else {\n                            if (section.endsWith(\"<-\")) {\n                                return node.in(RDF2h.resolveCurie(section.substring(0, section.length - 2)));\n                            } else {\n                                if (section.startsWith(\"^\")) {\n                                return node.in(RDF2h.resolveCurie(section.substring(1)));\n                            } else {\n                                return node.out(RDF2h.resolveCurie(section));\n                            }\n                            }\n                        }\n                    }\n                    let subNode = resolveSection(pathSections[0]);\n                    if (pathSections.length === 1) {\n                        var resultNodes = subNode.nodes;\n                        if (resultNodes.length === 0) {\n                            //handling pseudo properties of literals\n                            if (node.nodes[0].language) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(rdf.sym(\"http://purl.org/dc/terms/language\"))) {\n                                    return [rdf.literal(node.nodes[0].language)];\n                                }\n                            }\n                            if (node.nodes[0].datatype) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(RDF2h.resolveCurie(\"rdf:type\"))) {\n                                    return [node.nodes[0].datatype];\n                                }\n                            }\n                        }\n                        return resultNodes;\n                    }\n                    return resolveSubPath(subNode,pathSections.slice(1))    \n                }\n                var pathSections = path.split(\"/\").filter(function(e) { return e.length > 0})\n                return resolveSubPath(graphNode, pathSections);\n            }\n            if (name.startsWith(\"@prefix \")) {\n                var splits = name.split(\" \");\n                var prefixPart = splits[1];\n                var iriPart = splits[2];\n                var prefix = prefixPart.substring(0, prefixPart.length -1);\n                var iri = iriPart.substring(1, iriPart.length -1);\n                RDF2h.prefixMap[prefix] = iri;\n                return \"\";\n            }\n            if (name.startsWith(\":render \")) {\n                var splits = name.split(\" \");\n                var nodePath = splits[1];\n                var subContext = splits[2];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                var resolvedNodes = resolvePath(nodePath);\n                if (resolvedNodes.length > 1) {\n                    RDF2h.logger.warn(\"Argument of render evaluates to more than one node!\")\n                }\n                if (resolvedNodes.length > 0) {\n                    return rdf2h.render(graph, resolvedNodes[0], subContext)\n                } else {\n                    return \"\";\n                }\n            }\n            if (name.startsWith(\":continue\")) {\n                var splits = name.split(\" \");\n                var subContext = splits[1];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                if (graphNode.nodes.length > 1) {\n                    RDF2h.logger.warn(\":continue invoked in context with more than one node, this shouldn't be possible!\")\n                }\n                return rdf2h.render(graph, graphNode.nodes[0], subContext, currentMatcherIndex + 1);\n\n            }\n            if (name.startsWith(\"+\")) {\n                name = name.substring(1);\n                return (resolvePath(name).length > 0);\n            }\n            var nodes = resolvePath(name);\n            if (nodes.length === 1) {\n                return new RDF2h.Renderee(rdf2h, graph, nodes[0], context);\n            } else {\n                return nodes.map(function (node) {\n                    return new RDF2h.Renderee(rdf2h, graph, node, context);\n                });\n            }\n            /*var node = this.view;\n             if (name === \".\") {\n             return node;\n             } else {\n             return \"not supported: \"+name;\n             }*/\n        } else {\n            return origLokup.call(this, name);\n        }\n    };\n})();\n\nRDF2h.Renderee = function (rdf2h, graph, node, context) {\n    if (!node) {\n        throw \"no node specficied!\";\n    }\n    if (Object.prototype.toString.call(node) === '[object Array]') {\n        throw \"Renderee must be a single node\";\n    }\n    this.rdf2h = rdf2h;\n    this.graph = graph;\n    this.node = node;\n    this.context = context;\n    this.graphNode = GraphNode(node, graph);\n};\n\nRDF2h.Renderee.prototype.toString = function () {\n    if (this.node.value) {\n        return this.node.value;\n    }\n    return this.node.toString();\n}\n\nRDF2h.prototype.getRenderer = function (renderee) {\n    var r2h = RDF2h.ns;\n    function matchPattern(cfTriplePattern) {\n        function isThis(node) {\n            return node && node.equals(RDF2h.ns(\"this\"));\n            //return (node && (node.interfaceName === \"NamedNode\") &&\n            //        (node.toString() === \"http://rdf2h.github.io/2015/rdf2h#this\"));\n        }\n        var s = cfTriplePattern.out(r2h(\"subject\")).nodes[0];\n        var p = cfTriplePattern.out(r2h(\"predicate\")).nodes[0];\n        var o = cfTriplePattern.out(r2h(\"object\")).nodes[0];\n        if (isThis(s)) {\n            if (renderee.node.termType === \"Literal\") {\n                if (RDF2h.resolveCurie(\"rdf:type\").equals(p)) {\n                    return renderee.node.datatype.equals(o);\n                }\n            }\n            return renderee.graphNode.out(p).nodes.some(function (e) {\n                return (!o || o.equals(e));\n            });\n        } else if (isThis(o)) {\n            return renderee.graphNode.in(p).nodes.some(function (e) {\n                return (!s || s.equals(e));\n            });\n        } else {\n            console.error(\"Triple pattern must have r2h:this as subject or object\");\n        }\n    }\n    function matchesContext(cfTemplate) {\n        var contexts = cfTemplate.out(r2h(\"context\")).nodes;\n        if (contexts.length === 0) {\n            RDF2h.logger.trace(\"template \"+cfTemplate+\" specifies no context, thus accepting it for \"+renderee.context);\n            return true;\n        }\n        return contexts.some(function(context) {\n            if (renderee.context.equals(context)) {\n                RDF2h.logger.trace(\"template \"+cfTemplate+\" matches the context \"+renderee.context);\n                return true;\n            }\n        });\n    }\n    var self = this;\n    function matches(cfMatcher) {\n        var triplePatterns = cfMatcher.out(r2h(\"triplePattern\")).nodes;\n        for (var i = 0; i < triplePatterns.length; i++) {\n            var cfTp = GraphNode(triplePatterns[i], self.matcherGraph);\n            if (!matchPattern(cfTp)) {\n                RDF2h.logger.debug(\"Matcher \"+cfMatcher+\" doesn't has triple patterns matching \"+renderee.graphNode);\n                return false;\n            }\n        }\n        RDF2h.logger.debug(\"Matcher \"+cfMatcher+\" has triple patterns matching \"+renderee.graphNode);\n        return true;\n    }\n    function resolveTemplateNode(templateURI) {\n        if (!window) {\n            return \"Could not get template: \" + templateURI + \", no window object.\"\n        }\n        var pageURIPrefix = window.location + \"#\";\n        if (!templateURI.startsWith(pageURIPrefix)) {\n            return \"Could not get template: \" + templateURI + \", the prefix must be \" + pageURIPrefix + \".\"\n        }\n        var id = templateURI.substring(pageURIPrefix.length);\n        return document.getElementById(id).textContent;\n    }\n    function templateRenderer(template) {\n        return function (renderee) {\n            return Mustache.render(template, renderee);\n        };\n    }\n    for (var i = this.startMatcherIndex; i < this.sortedMatchers.length; i++) {\n        var matcher = this.sortedMatchers[i];\n        var cfMatcher = GraphNode(matcher, this.matcherGraph);\n        if (matches(cfMatcher)) {\n            renderee.currentMatcherIndex = i;\n            var templateNodes = cfMatcher.out(r2h(\"template\")).nodes;\n            for (var j = 0; j < templateNodes.length; j++) {\n                var templateNode = templateNodes[j];\n                var cfTemplate = GraphNode(templateNode, this.matcherGraph);\n                if (!matchesContext(cfTemplate)) {\n                    continue;\n                }\n                var jsNode = cfTemplate.\n                        out(r2h(\"javaScript\")).\n                        nodes[0];\n                if (jsNode) {\n                    return eval(\"var f = \"+jsNode.value+\"; f;\");\n                }\n                var mustacheNode = cfTemplate.\n                        out(r2h(\"mustache\")).\n                        node;\n                if (mustacheNode.termType === \"NamedNode\") {\n                    return templateRenderer(resolveTemplateNode(mustacheNode.value));\n                }\n                return templateRenderer(mustacheNode.value);\n            }\n            RDF2h.logger.debug(\"Matcher \"+cfMatcher+\" has not template with matching context\");\n        }\n    }\n    if (this.startMatcherIndex === 0) {\n        return templateRenderer('<div class=\"missingTemplate\">No template found for &lt;{{.}}&gt; in context &lt;'+renderee.context+'&gt;</div>');\n    } else {\n        return templateRenderer('<div class=\"noMoreTemplate\">No more template available for &lt;{{.}}&gt; in context &lt;'+renderee.context+'&gt;</div>');\n    }\n\n}\n\nRDF2h.prototype.render = function (graph, node, context, startMatcherIndex) {\n    if (!node.termType) {\n        node = rdf.sym(node);\n    }\n    if (!context) {\n        context = RDF2h.ns(\"Default\");\n    }\n    //wrap all in one object that gets special care by lookup\n    var renderee = new RDF2h.Renderee(this, graph, node, context);\n    if (!startMatcherIndex) {\n        this.startMatcherIndex = 0;\n    } else {\n        this.startMatcherIndex = startMatcherIndex;\n    }\n    var renderer = this.getRenderer(renderee);\n    return renderer(renderee);\n}\n\nRDF2h.prefixMap = {};\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"rdfs\"] = \"http://www.w3.org/2000/01/rdf-schema#\";\nRDF2h.prefixMap[\"r2h\"] = \"http://rdf2h.github.io/2015/rdf2h#\";\nRDF2h.prefixMap[\"schema\"] = \"http://schema.org/\";\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"dct\"] = \"http://purl.org/dc/terms/\";\n\n\nRDF2h.resolveCurie = function (curie) {\n    RDF2h.logger.debug(\"resolving \" + curie);\n    var splits = curie.split(\":\");\n    var prefix = splits[0];\n    var suffix = splits[1];\n    if (RDF2h.prefixMap[prefix]) {\n        return rdf.sym(RDF2h.prefixMap[prefix] + suffix);\n    } else {\n        return rdf.sym(curie);\n    }\n\n};\n\nif (typeof window !== 'undefined') {\n    window.RDF2h = RDF2h;\n}\n\nif (typeof module !== 'undefined') {\n    module.exports = RDF2h;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rdf2h.js","\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Node Status:\n * \n * Locally undetermined: There are multiple local nodes satisfying the criteria specified for this object \n * Blank: The object represents a blank node in a graph that is locally available\n * Unresolved: This node is identified by a URI that has not yet been derefernced\n * \n * @type type\n */\nif (typeof $rdf === 'undefined') {\n    var $rdf = require(\"rdflib\");\n}\n\nfunction GraphNode() {\n    return new (Function.prototype.bind.apply(GraphNode.Impl, [null].concat(Array.prototype.slice.call(arguments))))();\n}\n\nGraphNode.Impl = function () {\n    function _class(nodes, graph, sources) {\n        _classCallCheck(this, _class);\n\n        this._graph = graph;\n        if (Array.isArray(nodes)) {\n            this.nodes = nodes;\n            /*if (this.nodes.length === 0) {\n                throw \"Can't represent empty set of nodes\";\n            }*/\n        } else {\n            this.nodes = [nodes];\n        }\n        this.sources = sources;\n    }\n\n    _createClass(_class, [{\n        key: \"fetch\",\n        value: function fetch() {\n            var _this = this;\n\n            if (this.termType !== \"NamedNode\" || this.sources && this.sources.indexOf(this.value.split(\"#\")[0]) > -1) {\n                return Promise.resolve(this);\n            } else {\n                //TODO extend existing graph?\n                var uri = this.value.split(\"#\")[0];\n                return GraphNode.rdfFetch(uri).then(function (response) {\n                    return GraphNode(_this.node, response.graph, [uri]);\n                });\n            }\n        }\n\n        /*\n         * \n         * @param {type} f\n         * @returns {unresolved} a promise thta is satisfied whne all promises returned by f are resolved\n         */\n\n    }, {\n        key: \"each\",\n        value: function each(f) {\n            var _this2 = this;\n\n            var results = this.nodes.map(function (node) {\n                return f(GraphNode([node], _this2.graph, _this2.sources));\n            });\n            return Promise.all(results);\n        }\n    }, {\n        key: \"fetchEach\",\n        value: function fetchEach(f) {\n            var _this3 = this;\n\n            var results = this.nodes.map(function (node) {\n                return GraphNode([node], _this3.graph, _this3.sources).fetch().then(f);\n            });\n            return Promise.all(results);\n        }\n    }, {\n        key: \"out\",\n        value: function out(predicate) {\n            var nodes = this.graph.each(this.node, predicate);\n            /*if (nodes.length === 0) {\n                throw \"No property \"+predicate+\" on \"+this.node;\n            }*/\n            return GraphNode(nodes, this.graph, this.sources);\n        }\n    }, {\n        key: \"in\",\n        value: function _in(predicate) {\n            var statements = this.graph.statementsMatching(undefined, predicate, this.node);\n            /*if (statements.length === 0) {\n                throw \"No property \"+predicate+\" pointing to \"+this.node;\n            }*/\n            return GraphNode(statements.map(function (statement) {\n                return statement.subject;\n            }), this.graph, this.sources);\n        }\n    }, {\n        key: \"graph\",\n        get: function get() {\n            if (!this._graph) {\n                throw Error(\"Operation not possible as no Graph is available, try fetching first\");\n            }\n            return this._graph;\n        }\n    }, {\n        key: \"node\",\n        get: function get() {\n            if (this.nodes.length !== 1) {\n                throw Error(\"Operation not possible as this GraphNode is underdetermined\");\n            }\n            return this.nodes[0];\n        }\n    }, {\n        key: \"termType\",\n        get: function get() {\n            return this.node.termType;\n        }\n    }, {\n        key: \"value\",\n        get: function get() {\n            ;\n            return this.node.value;\n        }\n    }]);\n\n    return _class;\n}();\n\n/**\n * \n * Fetches an RDF graph. If the server return 401 the login process will be \n * started upon which the fetch will be retried.\n *\n * @param uri {string} The URI to be fetched\n * @param options passed to $rdf.Fetcher\n * @param login {boolean} The login function to be called, optional\n *\n * @return {Promise<Response>} Response has a `graph`property with the rertived graph\n */\nGraphNode.rdfFetch = function (uri, options, login) {\n    var ggg = this;\n    return new Promise(function (resolve, reject) {\n        var graph = $rdf.graph();\n        var fetcher = new $rdf.Fetcher(graph, options);\n        fetcher.fetch(uri, {\n            \"redirect\": \"follow\"\n        }).then(function (response) {\n            if (response.status < 300) {\n                response.graph = graph;\n                resolve(response);\n            } else {\n                if (login && response.status === 401) {\n                    console.log(\"Got 401 response, attempting to login\");\n                    return login().then(function () {\n                        return ggg.rdfFetch(uri);\n                    });\n                } else {\n                    reject(response);\n                }\n            }\n        });\n    });\n};\n\nif (typeof module !== 'undefined') {\n    module.exports = GraphNode;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rdfgraphnode/distribution/main.js","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/mustache/mustache.js","/* global module */\n\nfunction Logger() {\n    //get from localStorage\n    this.level = Logger.INFO;\n}\n\nLogger.TRACE = 1;\nLogger.DEBUG = 2;\nLogger.INFO = 3;\nLogger.WARN = 4;\nLogger.ERROR = 5;\n\nLogger.prototype.setLevel = function(level) {\n    this.level = level;\n};\n\nLogger.prototype.trace = function(message) {\n    if (this.level <= Logger.TRACE) {\n        var args = arguments;\n        args[0] = \"[TRACE] \"+message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.debug = function(message) {\n    if (this.level <= Logger.DEBUG) {\n        var args = arguments;\n        args[0] = \"[DEBUG] \"+message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.info = function(message) {\n    if (this.level <= Logger.INFO) {\n        var args = arguments;\n        args[0] = \"[INFO] \"+message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.warn = function(message) {\n    if (this.level <= Logger.WARN) {\n        var args = arguments;\n        args[0] = \"[WARN] \"+message;\n        console.log.apply(console, args);\n    }\n};\n\nLogger.prototype.error = function(message) {\n    if (this.level <= Logger.ERROR) {\n        var args = arguments;\n        args[0] = \"[ERROR] \"+message;\n        console.log.apply(console, args);\n    }\n};\n\n\nif (typeof module !== 'undefined') {\n    module.exports = Logger;\n}\nif (typeof window !== 'undefined') {\n    window.Logger = Logger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger.js"],"sourceRoot":""}