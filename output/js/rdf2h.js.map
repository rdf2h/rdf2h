{"version":3,"sources":["webpack:///js/rdf2h.js","webpack:///webpack/bootstrap 8cf12c09749b38b00dce","webpack:///external \"$rdf\"","webpack:///./src/rdf2h.js","webpack:///./node_modules/rdfgraphnode/distribution/main.js","webpack:///./node_modules/mustache/mustache.js","webpack:///./src/vocab.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","$rdf","RDF2h","rendererGraph","tbox","console","info","this","env","rdf","GraphNode","Mustache","vocab","Array","origLokup","rdf2h","Context","lookup","view","Renderee","resolvePath","path","resolveSubPath","node","pathSections","subNode","section","endsWith","in","resolveCurie","substring","length","startsWith","out","resultNodes","nodes","language","equals","sym","literal","datatype","slice","string","nextSection","result","push","readingURI","lastCharLess","pos","graphNode","graph","context","splits","split","prefixPart","iriPart","prefix","iri","prefixMap","nodePath","subContext","resolvedNodes","warn","render","map","Error","toString","value","getRenderer","renderee","_this","types","sort","a","b","rdfs","match","localeCompare","concat","t","renderer","getMatching","renderers","find","reduce","type","join","mustache","js","output","print","returnValue","Function","err","message","stackLines","stack","lineWithSelf","findIndex","indexOf","splice","termType","curie","debug","suffix","window","_classCallCheck","instance","Constructor","TypeError","bind","apply","Impl","arguments","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_class","sources","_graph","isArray","Promise","resolve","uri","rdfFetch","then","response","f","_this2","results","all","_this3","fetch","_this4","predicate","each","statementsMatching","undefined","statement","subject","options","login","ggg","reject","Fetcher","redirect","status","log","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","global","factory","nodeName","isFunction","typeStr","escapeRegExp","replace","hasProperty","propName","testRegExp","re","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","String","entityMap","parseTemplate","template","tags","compileTags","tagsToCompile","spaceRe","openingTagRe","RegExp","closingTagRe","closingCurlyRe","sections","tokens","spaces","hasTag","nonSpace","start","chr","token","openSection","scanner","Scanner","eos","scanUntil","valueLength","charAt","pop","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","nestedTokens","collector","tail","parentContext","cache",".","parent","Writer","objectToString","test","&","<",">","\"","'","/","`","=","index","search","names","lookupHit","clearCache","parse","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","self","j","escape","version","defaultWriter","to_html","send","schema","foaf"],"mappings":"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","file":"js/rdf2h.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = $rdf;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar rdf = __webpack_require__(0);\nvar GraphNode = __webpack_require__(2);\nvar Mustache = __webpack_require__(3);\nvar vocab = __webpack_require__(4);\nvar NodeSet = new Array();\n\nfunction RDF2h(rendererGraph, tbox) {\n    function r2h(suffix) {\n        return rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\" + suffix);\n    }\n    console.info(\"RDF2h created\");\n    this.rendererGraph = rendererGraph;\n    if (tbox) {\n        this.tbox = tbox;\n    } else {\n        this.tbox = rendererGraph;\n    }\n    this.env = {}; //this is to allow shared vars among renderers\n}\n\n(function () {\n    var r2h = vocab.rdf2h;\n    var origLokup = Mustache.Context.prototype.lookup;\n    Mustache.Context.prototype.lookup = function (name) {\n        if (this.view instanceof RDF2h.Renderee) {\n            var resolvePath = function resolvePath(path) {\n                function resolveSubPath(node, pathSections) {\n                    function resolveSection(section) {\n                        if (section === \".\") {\n                            return node;\n                        } else {\n                            if (section.endsWith(\"<-\")) {\n                                return node.in(RDF2h.resolveCurie(section.substring(0, section.length - 2)));\n                            } else {\n                                if (section.startsWith(\"^\")) {\n                                    return node.in(RDF2h.resolveCurie(section.substring(1)));\n                                } else {\n                                    return node.out(RDF2h.resolveCurie(section));\n                                }\n                            }\n                        }\n                    }\n                    var subNode = resolveSection(pathSections[0]);\n                    if (pathSections.length === 1) {\n                        var resultNodes = subNode.nodes;\n                        if (resultNodes.length === 0) {\n                            //handling pseudo properties of literals\n                            if (node.nodes[0].language) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(rdf.sym(\"http://purl.org/dc/terms/language\"))) {\n                                    return [rdf.literal(node.nodes[0].language)];\n                                }\n                            }\n                            if (node.nodes[0].datatype) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(RDF2h.resolveCurie(\"rdf:type\"))) {\n                                    return [node.nodes[0].datatype];\n                                }\n                            }\n                        }\n                        return resultNodes;\n                    }\n                    return resolveSubPath(subNode, pathSections.slice(1));\n                }\n                function splitPathSection(string) {\n                    var result = [];\n                    var readingURI = false;\n                    var lastCharLess = false;\n                    var section = \"\";\n                    function nextSection() {\n                        if (section.length > 0) {\n                            result.push(section);\n                            section = \"\";\n                        }\n                    }\n                    for (var pos = 0; pos < string.length; pos++) {\n                        var c = string[pos];\n                        if (lastCharLess) {\n                            if (c !== \"-\") {\n                                nextSection();\n                                readingURI = true;\n                            }\n                            section += \"<\";\n                            lastCharLess = false;\n                        }\n                        if (c === \"<\") {\n                            lastCharLess = true;\n                            continue;\n                        }\n                        if (readingURI && c == \">\") {\n                            section += c;\n                            nextSection();\n                            readingURI = false;\n                            continue;\n                        }\n                        if (!readingURI && c == \"/\") {\n                            nextSection();\n                            continue;\n                        }\n                        section += c;\n                    }\n                    nextSection();\n                    return result;\n                }\n                var pathSections = splitPathSection(path); // .split(\"/\").filter(function(e) { return e.length > 0})\n                return resolveSubPath(graphNode, pathSections);\n            };\n\n            var rdf2h = this.view.rdf2h;\n            var graphNode = this.view.graphNode;\n            var graph = graphNode.graph;\n            var context = this.view.context;\n\n            if (name.startsWith(\"@prefix \")) {\n                var splits = name.split(\" \");\n                var prefixPart = splits[1];\n                var iriPart = splits[2];\n                var prefix = prefixPart.substring(0, prefixPart.length - 1);\n                var iri = iriPart.substring(1, iriPart.length - 1);\n                RDF2h.prefixMap[prefix] = iri;\n                return \"\";\n            }\n            if (name.startsWith(\":render \")) {\n                var splits = name.split(\" \");\n                var nodePath = splits[1];\n                var subContext = splits[2];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                var resolvedNodes = resolvePath(nodePath);\n                if (resolvedNodes.length > 1) {\n                    console.warn(\"Argument of render evaluates to more than one node!\");\n                }\n                if (resolvedNodes.length > 0) {\n                    return rdf2h.render(graph, resolvedNodes[0], subContext);\n                } else {\n                    return \"\";\n                }\n            }\n            if (name.startsWith(\":continue\")) {\n                var splits = name.split(\" \");\n                var subContext = splits[1];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                if (graphNode.nodes.length > 1) {\n                    console.warn(\":continue invoked in context with more than one node, this shouldn't be possible!\");\n                }\n                return rdf2h.render(graph, graphNode.nodes[0], subContext);\n            }\n            if (name.startsWith(\"+\")) {\n                name = name.substring(1);\n                return resolvePath(name).length > 0;\n            }\n            var nodes = resolvePath(name);\n            if (nodes.length === 1) {\n                return new RDF2h.Renderee(rdf2h, GraphNode(nodes[0], graph), context);\n            } else {\n                return nodes.map(function (node) {\n                    return new RDF2h.Renderee(rdf2h, GraphNode(node, graph), context);\n                });\n            }\n            /*var node = this.view;\n             if (name === \".\") {\n             return node;\n             } else {\n             return \"not supported: \"+name;\n             }*/\n        } else {\n            return origLokup.call(this, name);\n        }\n    };\n})();\n\nRDF2h.Renderee = function (rdf2h, graphNode, context) {\n    if (!graphNode.nodes) {\n        throw new Error(\"second argument must be a GraphNode\");\n    }\n    if (graphNode.nodes.length !== 1) {\n        throw new Error(\"Renderee must be a single node\");\n    }\n    this.rdf2h = rdf2h;\n    this.graphNode = graphNode;\n    this.context = context;\n};\n\nRDF2h.Renderee.prototype.toString = function () {\n    if (this.graphNode.value) {\n        return this.graphNode.value;\n    }\n    return this.graphNode.toString();\n};\n\nRDF2h.prototype.getRenderer = function (renderee) {\n    var _this = this;\n\n    var r2h = vocab.rdf2h;\n    var tbox = this.tbox;\n    function matchesContext(cfRenderer) {\n        var contexts = cfRenderer.out(r2h(\"context\")).nodes;\n        if (contexts.length === 0) {\n            console.debug(\"renderer \" + cfRenderer + \" specifies no context, thus accepting it for \" + renderee.context);\n            return true;\n        }\n        return contexts.some(function (context) {\n            if (renderee.context.equals(context)) {\n                console.debug(\"renderer \" + cfRenderer + \" matches the context \" + renderee.context);\n                return true;\n            }\n        });\n    }\n    function resolveRendererNode(rendererURI) {\n        if (!window) {\n            return \"Could not get renderer: \" + rendererURI + \", no window object.\";\n        }\n        var pageURIPrefix = window.location + \"#\";\n        if (!rendererURI.startsWith(pageURIPrefix)) {\n            return \"Could not get renderer: \" + rendererURI + \", the prefix must be \" + pageURIPrefix + \".\";\n        }\n        var id = rendererURI.substring(pageURIPrefix.length);\n        return document.getElementById(id).textContent;\n    }\n    function rendererRenderer(renderer) {\n        return function (renderee) {\n            return Mustache.render(renderer, renderee);\n        };\n    }\n    function getTypes(graphNode) {\n        //the array might contain rdfs:Resource twice (at the end)\n        return graphNode.out(vocab.rdf(\"type\")).nodes.sort(function (a, b) {\n            if (a.equals(b)) {\n                return 0;\n            }\n            if (a.equals(vocab.rdfs(\"Resource\"))) {\n                return 1;\n            }\n            if (b.equals(vocab.rdfs(\"Resource\"))) {\n                return -1;\n            }\n            if (tbox.match(a, vocab.rdfs(\"subClassOf\"), b).length === 0) {\n                if (tbox.match(b, vocab.rdfs(\"subClassOf\"), a).length === 0) {\n                    return a.value.localeCompare(b.value);\n                } else {\n                    return 1;\n                }\n            } else {\n                return -1;\n            }\n        }).concat([vocab.rdfs(\"Resource\")]);\n    }\n    function getMatchingRenderer(types, context) {\n        function getMatching(renderers) {\n            return renderers.find(function (renderer) {\n                return context.equals(renderer.out(vocab.rdf2h(\"context\")).node);\n            });\n        }\n        return [false].concat(types).reduce(function (renderer, type) {\n            return renderer ? renderer : getMatching(type.in(vocab.rdf2h(\"type\")).split());\n        });\n    }\n    var types = getTypes(renderee.graphNode).map(function (t) {\n        return GraphNode(t, _this.rendererGraph);\n    });\n    var renderer = getMatchingRenderer(types, renderee.context);\n    if (!renderer) {\n        throw Error(\"No renderer found with context: \" + renderee.context + \" for any of the types \" + types.map(function (t) {\n            return \"<\" + t.value + \">\";\n        }).join() + \". The resource <\" + renderee.graphNode.value + \"> could thus not be rendered.\");\n    }\n    var mustache = renderer.out(vocab.rdf2h(\"mustache\"));\n    if (mustache.nodes.length > 0) {\n        return rendererRenderer(mustache.value);\n    }\n    var js = renderer.out(vocab.rdf2h(\"javaScript\"));\n    return function (renderee) {\n        try {\n            var render = function render(n, context) {\n                return renderee.rdf2h.render(n.graph, n.node, context ? context : renderee.context);\n            };\n            var output = \"\";\n            var print = function print(s) {\n                output += s;\n            };\n            //Also printing return value for now\n            var returnValue = new Function(\"n\", \"context\", \"$rdf\", \"render\", \"print\", \"GraphNode\", \"env\", js.value)(renderee.graphNode, renderee.context, rdf, render, print, GraphNode, renderee.rdf2h.env);\n            if (returnValue) {\n                return output + returnValue;\n            } else {\n                return output;\n            }\n        } catch (err) {\n            err.message = err.message + \" in \" + js.value;\n            var stackLines = err.stack.split(\"\\n\");\n            var lineWithSelf = stackLines.findIndex(function (l) {\n                return l.indexOf(\"RDF2h.render\") > 0;\n            });\n            err.stack = stackLines.splice(0, lineWithSelf - 1).join(\"\\n\");\n            throw err;\n        }\n    };\n};\n\nRDF2h.prototype.render = function (graph, node, context) {\n    if (!node.termType) {\n        node = rdf.sym(node);\n    }\n    if (!context) {\n        context = vocab.rdf2h(\"Default\");\n    }\n    //wrap all in one object that gets special care by lookup\n    var renderee = new RDF2h.Renderee(this, GraphNode(node, graph), context);\n    var renderer = this.getRenderer(renderee);\n    return renderer(renderee);\n};\n\nRDF2h.prefixMap = {};\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"rdfs\"] = \"http://www.w3.org/2000/01/rdf-schema#\";\nRDF2h.prefixMap[\"r2h\"] = \"http://rdf2h.github.io/2015/rdf2h#\";\nRDF2h.prefixMap[\"schema\"] = \"http://schema.org/\";\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"dct\"] = \"http://purl.org/dc/terms/\";\n\nRDF2h.resolveCurie = function (curie) {\n    if (curie.startsWith(\"<\") && curie.endsWith(\">\")) {\n        //URI, not a curie\n        return rdf.sym(curie.substring(1, curie.length - 1));\n    }\n    console.debug(\"resolving \" + curie);\n    var splits = curie.split(\":\");\n    var prefix = splits[0];\n    var suffix = splits[1];\n    if (RDF2h.prefixMap[prefix]) {\n        return rdf.sym(RDF2h.prefixMap[prefix] + suffix);\n    } else {\n        return rdf.sym(curie);\n    }\n};\n\nif (typeof window !== 'undefined') {\n    window.RDF2h = RDF2h;\n}\n\nif (true) {\n    module.exports = RDF2h;\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/**\n * Node Status:\n * \n * Locally undetermined: There are multiple local nodes satisfying the criteria specified for this object \n * Blank: The object represents a blank node in a graph that is locally available\n * Unresolved: This node is identified by a URI that has not yet been derefernced\n * \n * @type type\n */\nif (typeof $rdf === 'undefined') {\n    var $rdf = __webpack_require__(0);\n}\n\nfunction GraphNode() {\n    return new (Function.prototype.bind.apply(GraphNode.Impl, [null].concat(Array.prototype.slice.call(arguments))))();\n}\n\nGraphNode.Impl = function () {\n    function _class(nodes, graph, sources) {\n        _classCallCheck(this, _class);\n\n        this._graph = graph;\n        if (Array.isArray(nodes)) {\n            this.nodes = nodes;\n            /*if (this.nodes.length === 0) {\n                throw \"Can't represent empty set of nodes\";\n            }*/\n        } else {\n            this.nodes = [nodes];\n        }\n        this.sources = sources;\n    }\n\n    _createClass(_class, [{\n        key: \"fetch\",\n        value: function fetch() {\n            var _this = this;\n\n            if (this.termType !== \"NamedNode\" || this.sources && this.sources.indexOf(this.value.split(\"#\")[0]) > -1) {\n                return Promise.resolve(this);\n            } else {\n                //TODO extend existing graph?\n                var uri = this.value.split(\"#\")[0];\n                return GraphNode.rdfFetch(uri).then(function (response) {\n                    return GraphNode(_this.node, response.graph, [uri]);\n                });\n            }\n        }\n\n        /*\n         * \n         * @param {type} f\n         * @returns {unresolved} a promise that is satisfied when all promises returned by f are resolved\n         */\n\n    }, {\n        key: \"each\",\n        value: function each(f) {\n            var _this2 = this;\n\n            var results = this.nodes.map(function (node) {\n                return f(GraphNode([node], _this2.graph, _this2.sources));\n            });\n            return Promise.all(results);\n        }\n    }, {\n        key: \"fetchEach\",\n        value: function fetchEach(f) {\n            var _this3 = this;\n\n            var results = this.nodes.map(function (node) {\n                return GraphNode([node], _this3.graph, _this3.sources).fetch().then(f);\n            });\n            return Promise.all(results);\n        }\n\n        /**\n         * Returns a GraphNode for each node represented by this GraphNode\n         */\n\n    }, {\n        key: \"split\",\n        value: function split() {\n            var _this4 = this;\n\n            return this.nodes.map(function (node) {\n                return GraphNode([node], _this4.graph, _this4.sources);\n            });\n        }\n    }, {\n        key: \"out\",\n        value: function out(predicate) {\n            var nodes = this.graph.each(this.node, predicate);\n            /*if (nodes.length === 0) {\n                throw \"No property \"+predicate+\" on \"+this.node;\n            }*/\n            return GraphNode(nodes, this.graph, this.sources);\n        }\n    }, {\n        key: \"in\",\n        value: function _in(predicate) {\n            var statements = this.graph.statementsMatching(undefined, predicate, this.node);\n            /*if (statements.length === 0) {\n                throw \"No property \"+predicate+\" pointing to \"+this.node;\n            }*/\n            return GraphNode(statements.map(function (statement) {\n                return statement.subject;\n            }), this.graph, this.sources);\n        }\n    }, {\n        key: \"graph\",\n        get: function get() {\n            if (!this._graph) {\n                throw Error(\"Operation not possible as no Graph is available, try fetching first\");\n            }\n            return this._graph;\n        }\n    }, {\n        key: \"node\",\n        get: function get() {\n            if (this.nodes.length !== 1) {\n                throw Error(\"Operation not possible as this GraphNode is underdetermined\");\n            }\n            return this.nodes[0];\n        }\n    }, {\n        key: \"termType\",\n        get: function get() {\n            return this.node.termType;\n        }\n    }, {\n        key: \"value\",\n        get: function get() {\n            ;\n            return this.node.value;\n        }\n    }]);\n\n    return _class;\n}();\n\n/**\n * \n * Fetches an RDF graph. If the server return 401 the login process will be \n * started upon which the fetch will be retried.\n *\n * @param uri {string} The URI to be fetched\n * @param options passed to $rdf.Fetcher\n * @param login {boolean} The login function to be called, optional\n *\n * @return {Promise<Response>} Response has a `graph`property with the rertived graph\n */\nGraphNode.rdfFetch = function (uri, options, login) {\n    var ggg = this;\n    return new Promise(function (resolve, reject) {\n        var graph = $rdf.graph();\n        var fetcher = new $rdf.Fetcher(graph, options);\n        fetcher.fetch(uri, {\n            \"redirect\": \"follow\"\n        }).then(function (response) {\n            if (response.status < 300) {\n                response.graph = graph;\n                resolve(response);\n            } else {\n                if (login && response.status === 401) {\n                    console.log(\"Got 401 response, attempting to login\");\n                    return login().then(function () {\n                        return ggg.rdfFetch(uri);\n                    });\n                } else {\n                    reject(response);\n                }\n            }\n        });\n    });\n};\n\nif (true) {\n    module.exports = GraphNode;\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache(global, factory) {\n  if (( false ? 'undefined' : _typeof(exports)) === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n})(undefined, function mustacheFactory(mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill(object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr(obj) {\n    return isArray(obj) ? 'array' : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty(obj, propName) {\n    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && propName in obj;\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap(s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    if (!template) return [];\n\n    var sections = []; // Stack to hold section tokens\n    var tokens = []; // Buffer to hold the tokens\n    var spaces = []; // Indices of whitespace tokens on the current line\n    var hasTag = false; // Is there a {{tag}} on the current line?\n    var nonSpace = false; // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags(tagsToCompile) {\n      if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe)) break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [type, value, start, scanner.pos];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection) throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos() {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan(re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0) return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil(re) {\n    var index = this.tail.search(re),\n        match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push(view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup(name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this,\n          names,\n          index,\n          lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1) lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value)) value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache() {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse(template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null) tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render(template, view, partials) {\n    var tokens = this.parse(template);\n    var context = view instanceof Context ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);else if (symbol === '&') value = this.unescapedValue(token, context);else if (symbol === 'name') value = this.escapedValue(token, context);else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined) buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null) buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue(token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = ['{{', '}}'];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache() {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse(template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render(template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html(template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar $rdf = __webpack_require__(0);\n\nmodule.exports = {\n    schema: function schema(suffix) {\n        return $rdf.sym(\"http://schema.org/\" + suffix);\n    },\n    rdf: function rdf(suffix) {\n        return $rdf.sym(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" + suffix);\n    },\n    rdfs: function rdfs(suffix) {\n        return $rdf.sym(\"http://www.w3.org/2000/01/rdf-schema#\" + suffix);\n    },\n    foaf: function foaf(suffix) {\n        return $rdf.sym(\"http://xmlns.com/foaf/0.1/\" + suffix);\n    },\n    rdf2h: function rdf2h(suffix) {\n        return $rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\" + suffix);\n    }\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/rdf2h.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8cf12c09749b38b00dce","module.exports = $rdf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"$rdf\"\n// module id = 0\n// module chunks = 0","var rdf = require(\"rdflib\");\nvar GraphNode = require(\"rdfgraphnode\");\nvar Mustache = require(\"mustache\");\nvar vocab = require(\"./vocab.js\");\nvar NodeSet = new Array();\n\n\nfunction RDF2h(rendererGraph, tbox) {\n    function r2h(suffix) {\n        return rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\"+suffix);\n    }\n    console.info(\"RDF2h created\");\n    this.rendererGraph = rendererGraph;\n    if (tbox) {\n        this.tbox = tbox;\n    } else {\n        this.tbox = rendererGraph;\n    }\n    this.env = {}; //this is to allow shared vars among renderers\n}\n\n\n(function () {\n    var r2h = vocab.rdf2h;\n    var origLokup = Mustache.Context.prototype.lookup;\n    Mustache.Context.prototype.lookup = function (name) {\n        if (this.view instanceof RDF2h.Renderee) {\n            var rdf2h = this.view.rdf2h;\n            var graphNode = this.view.graphNode;\n            var graph = graphNode.graph;\n            var context = this.view.context;\n            function resolvePath(path) {\n                function resolveSubPath(node, pathSections) {\n                    function resolveSection(section) {\n                        if (section === \".\") {\n                            return node;\n                        } else {\n                            if (section.endsWith(\"<-\")) {\n                                return node.in(RDF2h.resolveCurie(section.substring(0, section.length - 2)));\n                            } else {\n                                if (section.startsWith(\"^\")) {\n                                    return node.in(RDF2h.resolveCurie(section.substring(1)));\n                                } else {\n                                    return node.out(RDF2h.resolveCurie(section));\n                                }\n                            }\n                        }\n                    }\n                    let subNode = resolveSection(pathSections[0]);\n                    if (pathSections.length === 1) {\n                        var resultNodes = subNode.nodes;\n                        if (resultNodes.length === 0) {\n                            //handling pseudo properties of literals\n                            if (node.nodes[0].language) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(rdf.sym(\"http://purl.org/dc/terms/language\"))) {\n                                    return [rdf.literal(node.nodes[0].language)];\n                                }\n                            }\n                            if (node.nodes[0].datatype) {\n                                if (RDF2h.resolveCurie(pathSections[0]).equals(RDF2h.resolveCurie(\"rdf:type\"))) {\n                                    return [node.nodes[0].datatype];\n                                }\n                            }\n                        }\n                        return resultNodes;\n                    }\n                    return resolveSubPath(subNode,pathSections.slice(1))    \n                }\n                function splitPathSection(string) {\n                    let result = [];\n                    let readingURI = false;\n                    let lastCharLess = false;\n                    let section = \"\";\n                    function nextSection() {\n                        if (section.length > 0) {\n                            result.push(section);\n                            section = \"\";    \n                        }\n                    }\n                    for (var pos = 0; pos < string.length; pos++) {    \n                        let c = string[pos];\n                        if (lastCharLess) {\n                            if (c !== \"-\") {\n                                nextSection();\n                                readingURI = true;\n                            }\n                            section += \"<\";\n                            lastCharLess = false;\n                        }\n                        if (c === \"<\") {\n                            lastCharLess = true;\n                            continue;\n                        }\n                        if (readingURI && (c == \">\")) {\n                            section += c;\n                            nextSection();\n                            readingURI = false;\n                            continue;\n                        }\n                        if (!readingURI && (c == \"/\")) {\n                            nextSection();\n                            continue;\n                        }\n                        section += c;\n                    }\n                    nextSection();\n                    return result;\n                }\n                var pathSections = splitPathSection(path);// .split(\"/\").filter(function(e) { return e.length > 0})\n                return resolveSubPath(graphNode, pathSections);\n            }\n            if (name.startsWith(\"@prefix \")) {\n                var splits = name.split(\" \");\n                var prefixPart = splits[1];\n                var iriPart = splits[2];\n                var prefix = prefixPart.substring(0, prefixPart.length -1);\n                var iri = iriPart.substring(1, iriPart.length -1);\n                RDF2h.prefixMap[prefix] = iri;\n                return \"\";\n            }\n            if (name.startsWith(\":render \")) {\n                var splits = name.split(\" \");\n                var nodePath = splits[1];\n                var subContext = splits[2];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                var resolvedNodes = resolvePath(nodePath);\n                if (resolvedNodes.length > 1) {\n                    console.warn(\"Argument of render evaluates to more than one node!\")\n                }\n                if (resolvedNodes.length > 0) {\n                    return rdf2h.render(graph, resolvedNodes[0], subContext)\n                } else {\n                    return \"\";\n                }\n            }\n            if (name.startsWith(\":continue\")) {\n                var splits = name.split(\" \");\n                var subContext = splits[1];\n                if (subContext) {\n                    subContext = RDF2h.resolveCurie(subContext);\n                }\n                if (!subContext) {\n                    subContext = context;\n                }\n                if (graphNode.nodes.length > 1) {\n                    console.warn(\":continue invoked in context with more than one node, this shouldn't be possible!\")\n                }\n                return rdf2h.render(graph, graphNode.nodes[0], subContext);\n\n            }\n            if (name.startsWith(\"+\")) {\n                name = name.substring(1);\n                return (resolvePath(name).length > 0);\n            }\n            var nodes = resolvePath(name);\n            if (nodes.length === 1) {\n                return new RDF2h.Renderee(rdf2h, GraphNode(nodes[0], graph), context);\n            } else {\n                return nodes.map(function (node) {\n                    return new RDF2h.Renderee(rdf2h, GraphNode(node, graph), context);\n                });\n            }\n            /*var node = this.view;\n             if (name === \".\") {\n             return node;\n             } else {\n             return \"not supported: \"+name;\n             }*/\n        } else {\n            return origLokup.call(this, name);\n        }\n    };\n})();\n\nRDF2h.Renderee = function (rdf2h, graphNode, context) {\n    if (!graphNode.nodes) {\n        throw new Error(\"second argument must be a GraphNode\");\n    }\n    if (graphNode.nodes.length !== 1) {\n        throw new Error(\"Renderee must be a single node\");\n    }\n    this.rdf2h = rdf2h;\n    this.graphNode = graphNode;\n    this.context = context;\n};\n\nRDF2h.Renderee.prototype.toString = function () {\n    if (this.graphNode.value) {\n        return this.graphNode.value;\n    }\n    return this.graphNode.toString();\n}\n\nRDF2h.prototype.getRenderer = function (renderee) {\n    var r2h = vocab.rdf2h;\n    let tbox = this.tbox;\n    function matchesContext(cfRenderer) {\n        var contexts = cfRenderer.out(r2h(\"context\")).nodes;\n        if (contexts.length === 0) {\n            console.debug(\"renderer \"+cfRenderer+\" specifies no context, thus accepting it for \"+renderee.context);\n            return true;\n        }\n        return contexts.some(function(context) {\n            if (renderee.context.equals(context)) {\n                console.debug(\"renderer \"+cfRenderer+\" matches the context \"+renderee.context);\n                return true;\n            }\n        });\n    }\n    function resolveRendererNode(rendererURI) {\n        if (!window) {\n            return \"Could not get renderer: \" + rendererURI + \", no window object.\"\n        }\n        var pageURIPrefix = window.location + \"#\";\n        if (!rendererURI.startsWith(pageURIPrefix)) {\n            return \"Could not get renderer: \" + rendererURI + \", the prefix must be \" + pageURIPrefix + \".\"\n        }\n        var id = rendererURI.substring(pageURIPrefix.length);\n        return document.getElementById(id).textContent;\n    }\n    function rendererRenderer(renderer) {\n        return function (renderee) {\n            return Mustache.render(renderer, renderee);\n        };\n    }\n    function getTypes(graphNode) {\n        //the array might contain rdfs:Resource twice (at the end)\n        return graphNode.out(vocab.rdf(\"type\")).nodes.sort(\n            (a,b) => {\n                if (a.equals(b)) {\n                    return 0;\n                }\n                if (a.equals(vocab.rdfs(\"Resource\"))) {\n                    return 1;\n                }\n                if (b.equals(vocab.rdfs(\"Resource\"))) {\n                    return -1;\n                }\n                if (tbox.match(a, vocab.rdfs(\"subClassOf\"),b).length === 0) {\n                    if (tbox.match(b, vocab.rdfs(\"subClassOf\"),a).length === 0) {\n                        return a.value.localeCompare(b.value);\n                    } else {\n                        return 1;\n                    }\n                } else {\n                    return -1;\n                }\n            }\n        ).concat([vocab.rdfs(\"Resource\")]);\n    }\n    function getMatchingRenderer(types, context) {\n        function getMatching(renderers) {\n            return renderers.find(renderer => context.equals(renderer.out(vocab.rdf2h(\"context\")).node));\n        }\n        return [false].concat(types).reduce((renderer, type) => \n            renderer ? renderer : getMatching(type.in(vocab.rdf2h(\"type\")).split()));\n    }\n    let types = getTypes(renderee.graphNode).map(t => GraphNode(t, this.rendererGraph));\n    let renderer = getMatchingRenderer(types, renderee.context);\n    if (!renderer) {\n        throw Error(\"No renderer found with context: \"+renderee.context+\" for any of the types \"+types.map(t => \"<\"+t.value+\">\").join()\n                    +\". The resource <\"+renderee.graphNode.value+\"> could thus not be rendered.\");\n    }\n    let mustache = renderer.out(vocab.rdf2h(\"mustache\"));\n    if (mustache.nodes.length > 0) {\n        return rendererRenderer(mustache.value);\n    }\n    let js = renderer.out(vocab.rdf2h(\"javaScript\"))\n    return function (renderee) {\n        try {\n            let render =  (n, context) => {\n                return renderee.rdf2h.render(n.graph, n.node, context ? context : renderee.context);\n            };\n            let output = \"\";\n            let print = (s) => {\n                output += s;\n            };\n            //Also printing return value for now\n            let returnValue = (new Function(\"n\", \"context\", \"$rdf\", \"render\", \"print\", \"GraphNode\", \"env\", js.value)\n                    )(renderee.graphNode, renderee.context, rdf, render, print, GraphNode, renderee.rdf2h.env);\n            if (returnValue) {\n                return output + returnValue;\n            } else {\n                return output;\n            }\n        } catch(err) {\n            err.message = err.message + \" in \" + js.value;\n            let stackLines = err.stack.split(\"\\n\");\n            let lineWithSelf = stackLines.findIndex(l => l.indexOf(\"RDF2h.render\") > 0);\n            err.stack = stackLines.splice(0, lineWithSelf - 1).join(\"\\n\");\n            throw err;\n        }\n    };\n\n\n}\n\nRDF2h.prototype.render = function (graph, node, context) {\n    if (!node.termType) {\n        node = rdf.sym(node);\n    }\n    if (!context) {\n        context = vocab.rdf2h(\"Default\");\n    }\n    //wrap all in one object that gets special care by lookup\n    var renderee = new RDF2h.Renderee(this, GraphNode(node, graph), context);\n    var renderer = this.getRenderer(renderee);\n    return renderer(renderee);\n}\n\nRDF2h.prefixMap = {};\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"rdfs\"] = \"http://www.w3.org/2000/01/rdf-schema#\";\nRDF2h.prefixMap[\"r2h\"] = \"http://rdf2h.github.io/2015/rdf2h#\";\nRDF2h.prefixMap[\"schema\"] = \"http://schema.org/\";\nRDF2h.prefixMap[\"rdf\"] = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nRDF2h.prefixMap[\"dct\"] = \"http://purl.org/dc/terms/\";\n\n\nRDF2h.resolveCurie = function (curie) {\n    if (curie.startsWith(\"<\") && curie.endsWith(\">\")) {\n        //URI, not a curie\n        return rdf.sym(curie.substring(1, curie.length - 1));\n    }\n    console.debug(\"resolving \" + curie);\n    var splits = curie.split(\":\");\n    var prefix = splits[0];\n    var suffix = splits[1];\n    if (RDF2h.prefixMap[prefix]) {\n        return rdf.sym(RDF2h.prefixMap[prefix] + suffix);\n    } else {\n        return rdf.sym(curie);\n    }\n\n};\n\nif (typeof window !== 'undefined') {\n    window.RDF2h = RDF2h;\n}\n\nif (typeof module !== 'undefined') {\n    module.exports = RDF2h;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rdf2h.js","\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Node Status:\n * \n * Locally undetermined: There are multiple local nodes satisfying the criteria specified for this object \n * Blank: The object represents a blank node in a graph that is locally available\n * Unresolved: This node is identified by a URI that has not yet been derefernced\n * \n * @type type\n */\nif (typeof $rdf === 'undefined') {\n    var $rdf = require(\"rdflib\");\n}\n\nfunction GraphNode() {\n    return new (Function.prototype.bind.apply(GraphNode.Impl, [null].concat(Array.prototype.slice.call(arguments))))();\n}\n\nGraphNode.Impl = function () {\n    function _class(nodes, graph, sources) {\n        _classCallCheck(this, _class);\n\n        this._graph = graph;\n        if (Array.isArray(nodes)) {\n            this.nodes = nodes;\n            /*if (this.nodes.length === 0) {\n                throw \"Can't represent empty set of nodes\";\n            }*/\n        } else {\n            this.nodes = [nodes];\n        }\n        this.sources = sources;\n    }\n\n    _createClass(_class, [{\n        key: \"fetch\",\n        value: function fetch() {\n            var _this = this;\n\n            if (this.termType !== \"NamedNode\" || this.sources && this.sources.indexOf(this.value.split(\"#\")[0]) > -1) {\n                return Promise.resolve(this);\n            } else {\n                //TODO extend existing graph?\n                var uri = this.value.split(\"#\")[0];\n                return GraphNode.rdfFetch(uri).then(function (response) {\n                    return GraphNode(_this.node, response.graph, [uri]);\n                });\n            }\n        }\n\n        /*\n         * \n         * @param {type} f\n         * @returns {unresolved} a promise that is satisfied when all promises returned by f are resolved\n         */\n\n    }, {\n        key: \"each\",\n        value: function each(f) {\n            var _this2 = this;\n\n            var results = this.nodes.map(function (node) {\n                return f(GraphNode([node], _this2.graph, _this2.sources));\n            });\n            return Promise.all(results);\n        }\n    }, {\n        key: \"fetchEach\",\n        value: function fetchEach(f) {\n            var _this3 = this;\n\n            var results = this.nodes.map(function (node) {\n                return GraphNode([node], _this3.graph, _this3.sources).fetch().then(f);\n            });\n            return Promise.all(results);\n        }\n\n        /**\n         * Returns a GraphNode for each node represented by this GraphNode\n         */\n\n    }, {\n        key: \"split\",\n        value: function split() {\n            var _this4 = this;\n\n            return this.nodes.map(function (node) {\n                return GraphNode([node], _this4.graph, _this4.sources);\n            });\n        }\n    }, {\n        key: \"out\",\n        value: function out(predicate) {\n            var nodes = this.graph.each(this.node, predicate);\n            /*if (nodes.length === 0) {\n                throw \"No property \"+predicate+\" on \"+this.node;\n            }*/\n            return GraphNode(nodes, this.graph, this.sources);\n        }\n    }, {\n        key: \"in\",\n        value: function _in(predicate) {\n            var statements = this.graph.statementsMatching(undefined, predicate, this.node);\n            /*if (statements.length === 0) {\n                throw \"No property \"+predicate+\" pointing to \"+this.node;\n            }*/\n            return GraphNode(statements.map(function (statement) {\n                return statement.subject;\n            }), this.graph, this.sources);\n        }\n    }, {\n        key: \"graph\",\n        get: function get() {\n            if (!this._graph) {\n                throw Error(\"Operation not possible as no Graph is available, try fetching first\");\n            }\n            return this._graph;\n        }\n    }, {\n        key: \"node\",\n        get: function get() {\n            if (this.nodes.length !== 1) {\n                throw Error(\"Operation not possible as this GraphNode is underdetermined\");\n            }\n            return this.nodes[0];\n        }\n    }, {\n        key: \"termType\",\n        get: function get() {\n            return this.node.termType;\n        }\n    }, {\n        key: \"value\",\n        get: function get() {\n            ;\n            return this.node.value;\n        }\n    }]);\n\n    return _class;\n}();\n\n/**\n * \n * Fetches an RDF graph. If the server return 401 the login process will be \n * started upon which the fetch will be retried.\n *\n * @param uri {string} The URI to be fetched\n * @param options passed to $rdf.Fetcher\n * @param login {boolean} The login function to be called, optional\n *\n * @return {Promise<Response>} Response has a `graph`property with the rertived graph\n */\nGraphNode.rdfFetch = function (uri, options, login) {\n    var ggg = this;\n    return new Promise(function (resolve, reject) {\n        var graph = $rdf.graph();\n        var fetcher = new $rdf.Fetcher(graph, options);\n        fetcher.fetch(uri, {\n            \"redirect\": \"follow\"\n        }).then(function (response) {\n            if (response.status < 300) {\n                response.graph = graph;\n                resolve(response);\n            } else {\n                if (login && response.status === 401) {\n                    console.log(\"Got 401 response, attempting to login\");\n                    return login().then(function () {\n                        return ggg.rdfFetch(uri);\n                    });\n                } else {\n                    reject(response);\n                }\n            }\n        });\n    });\n};\n\nif (typeof module !== 'undefined') {\n    module.exports = GraphNode;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rdfgraphnode/distribution/main.js","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/mustache/mustache.js","var $rdf = require(\"rdflib\");\n\nmodule.exports = {\n    schema: function (suffix) {\n        return $rdf.sym(\"http://schema.org/\" + suffix);\n    },\n    rdf: function (suffix) {\n        return $rdf.sym(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" + suffix);\n    },\n    rdfs: function (suffix) {\n        return $rdf.sym(\"http://www.w3.org/2000/01/rdf-schema#\" + suffix);\n    },\n    foaf: function (suffix) {\n        return $rdf.sym(\"http://xmlns.com/foaf/0.1/\" + suffix);\n    },\n    rdf2h: function(suffix) {\n        return $rdf.sym(\"http://rdf2h.github.io/2015/rdf2h#\"+suffix);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vocab.js"],"sourceRoot":""}